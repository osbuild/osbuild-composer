---
.common:
  distro_build_pkgset: &distro_build_pkgset
    include:
      - "dnf"
      - "dosfstools"
      - "e2fsprogs"
      - "glibc"
      - "lorax-templates-generic"
      - "lorax-templates-rhel"
      - "lvm2"
      - "policycoreutils"
      - "python3-iniparse"
      - "qemu-img"
      - "selinux-policy-targeted"
      - "systemd"
      - "tar"
      - "xfsprogs"
      - "xz"
    conditions:
      "x86_64 specific packages for build pkgsset":
        when:
          arch: "x86_64"
        append:
          include:
            - "grub2-pc"
      "ppc64le specific packages for build pkgsset":
        when:
          arch: "ppc64le"
        append:
          include:
            - "grub2-ppc64le"
            - "grub2-ppc64le-modules"

  disk_sizes:
    default_required_partition_sizes: &default_required_dir_sizes
      "/": 1_073_741_824     # 1 * datasizes.GiB
      "/usr": 2_147_483_648  # 2 * datasizes.GiB

  platforms:
    x86_64_uefi_platform: &x86_64_uefi_platform
      arch: "x86_64"
      bootloader: "grub2"
      uefi_vendor: "{{.DistroVendor}}"
      qcow2_compat: "1.1"
      packages: &x86_64_uefi_platform_packages
        uefi:
          - "dracut-config-generic"
          - "efibootmgr"
          - "grub2-efi-x64"
          - "shim-x64"
    x86_64_bios_platform: &x86_64_bios_platform
      <<: *x86_64_uefi_platform
      bios_platform: "i386-pc"
      uefi_vendor: "{{.DistroVendor}}"
      packages: &x86_64_bios_platform_packages
        <<: *x86_64_uefi_platform_packages
        bios:
          - "dracut-config-generic"
          - "grub2-pc"
      build_packages:
        bios:
          - "grub2-pc"
    x86_64_installer_platform: &x86_64_installer_platform
      <<: *x86_64_bios_platform
      image_format: "raw"
      packages:
        <<: *x86_64_bios_platform_packages
        firmware:
          - "microcode_ctl"  # ??
          - "iwl1000-firmware"
          - "iwl100-firmware"
          - "iwl105-firmware"
          - "iwl135-firmware"
          - "iwl2000-firmware"
          - "iwl2030-firmware"
          - "iwl3160-firmware"
          - "iwl5000-firmware"
          - "iwl5150-firmware"
          - "iwl6050-firmware"
    aarch64_platform: &aarch64_platform
      arch: "aarch64"
      bootloader: "grub2"
      uefi_vendor: "{{.DistroVendor}}"
      image_format: "qcow2"
      qcow2_compat: "1.1"
      packages: &aarch64_uefi_platform_packages
        uefi:
          - "dracut-config-generic"
          - "efibootmgr"
          - "grub2-efi-aa64"
          - "grub2-tools"
          - "shim-aa64"
    ppc64le_bios_platform: &ppc64le_bios_platform
      arch: "ppc64le"
      bootloader: "grub2"
      bios_platform: "powerpc-ieee1275"
      image_format: "qcow2"
      qcow2_compat: "1.1"
      packages:
        bios:
          - "dracut-config-generic"
          - "powerpc-utils"
          - "grub2-ppc64le"
          - "grub2-ppc64le-modules"
      build_packages:
        bios:
          - "grub2-ppc64le"
          - "grub2-ppc64le-modules"
    s390x_zipl_platform: &s390x_zipl_platform
      arch: "s390x"
      # XXX: merge zipl_support/bootloader
      bootloader: "zipl"
      zipl_support: true
      image_format: "qcow2"
      qcow2_compat: "1.1"
      packages:
        zipl:
          - "dracut-config-generic"
          - "s390utils-base"
          - "s390utils-core"
      build_packages:
        zipl:
          - "s390utils-base"

  sapapps_image_config: &sapapps_image_config
    selinux_config:
      state: "permissive"
    # RHBZ#1959979
    tmpfilesd:
      - filename: "sap.conf"
        config:
          - type: "x"
            path: "/tmp/.sap*"
          - type: "x"
            path: "/tmp/.hdb*lock"
          - type: "x"
            path: "/tmp/.trex*lock"
    # RHBZ#1959963
    pam_limits_conf:
      - filename: "99-sap.conf"
        config:
          - domain: "@sapsys"
            type: "hard"
            item: "nofile"
            value: 1048576
          - domain: "@sapsys"
            type: "soft"
            item: "nofile"
            value: 1048576
          - domain: "@dba"
            type: "hard"
            item: "nofile"
            value: 1048576
          - domain: "@dba"
            type: "soft"
            item: "nofile"
            value: 1048576
          - domain: "@sapsys"
            type: "hard"
            item: "nproc"
            value: "unlimited"
          - domain: "@sapsys"
            type: "soft"
            item: "nproc"
            value: "unlimited"
          - domain: "@dba"
            type: "hard"
            item: "nproc"
            value: "unlimited"
          - domain: "@dba"
            type: "soft"
            item: "nproc"
            value: "unlimited"
    # RHBZ#1959962
    sysctld:
      - filename: "sap.conf"
        config:
          - key: "kernel.pid_max"
            value: "4194304"
          - key: "vm.max_map_count"
            value: "2147483647"
    dnf_config:
      set_release_ver_var: true

  sap_image_config: &sap_image_config
    <<: *sapapps_image_config
    tuned:
      profiles: ["sap-hana"]

  sap_base_pkgset: &sap_base_pkgset
    include:
      # RHBZ#2076763
      - "@Server"
      # RHBZ#1959813
      - "bind-utils"
      - "nfs-utils"
      - "tcsh"
      # RHBZ#1959955
      - "uuidd"
      # RHBZ#1959923
      - "cairo"
      - "expect"
      - "graphviz"
      # "gtk2" # gtk2 is not available in RHEL-10
      - "iptraf-ng"
      - "krb5-workstation"
      - "libaio"
      - "libatomic"
      - "libicu"
      - "libtool-ltdl"
      - "lm_sensors"
      - "net-tools"
      - "numactl"
      - "PackageKit-gtk3-module"
      - "xorg-x11-xauth"
      # RHBZ#1961168
      - "libnsl"
    exclude:
      - "iwl1000-firmware"
      - "iwl100-firmware"
      - "iwl105-firmware"
      - "iwl135-firmware"
      - "iwl2000-firmware"
      - "iwl2030-firmware"
      - "iwl3160-firmware"
      - "iwl5000-firmware"
      - "iwl5150-firmware"
      - "iwl6000g2a-firmware"
      - "iwl6000g2b-firmware"
      - "iwl6050-firmware"
      - "iwl7260-firmware"

  sap_extras_pkgset: &sap_extras_pkgset
    include:
      # SAP System Roles
      # https://access.redhat.com/sites/default/files/attachments/rhel_system_roles_for_sap_1.pdf
      - "ansible-core"
      - "rhel-system-roles-sap"
      # RHBZ#1960617
      - "tuned-profiles-sap-hana"

  installer_pkgset: &installer_pkgset
    include:
      - "anaconda-dracut"
      - "curl"
      - "dracut-config-generic"
      - "dracut-network"
      - "hostname"
      - "iwl100-firmware"
      - "iwl1000-firmware"
      - "iwl105-firmware"
      - "iwl135-firmware"
      - "iwl2000-firmware"
      - "iwl2030-firmware"
      - "iwl3160-firmware"
      - "iwl5000-firmware"
      - "iwl5150-firmware"
      - "iwl6050-firmware"
      - "iwl7260-firmware"
      - "kernel"
      - "less"
      - "nfs-utils"
      - "openssh-clients"
      - "ostree"
      - "plymouth"
      - "prefixdevname"
      - "rng-tools"
      - "rpcbind"
      - "selinux-policy-targeted"
      - "systemd"
      - "tar"
      - "xfsprogs"
      - "xz"
      # Extra packages that are required by the dracut stage of all installers.
      # These are weak deps of other packages in the list above, but lets be
      # explicit about what we need and not rely on the weak deps. Relying
      # on hard-dependencies for other modules is OK for now.
      #
      # TODO: add these dynamically based on the modules enabled by each
      # pipeline.
      - "mdadm"
      - "nss-softokn"

  anaconda_boot_pkgset: &anaconda_boot_pkgset
    conditions:
      "x86 specific packages for the anaconda boot pkgset":
        when:
          arch: "x86_64"
        append:
          include:
            # eficommon
            - "efibootmgr"
            # XXX: de-dup?
            # grub-common
            - "grub2-tools"
            - "grub2-tools-extra"
            - "grub2-tools-minimal"
            # arch specific
            - "grub2-efi-x64"
            - "grub2-efi-x64-cdboot"
            - "grub2-pc"
            - "grub2-pc-modules"
            - "shim-x64"
            - "syslinux"
            - "syslinux-nonlinux"
      "aarch64 specific packages for the anaconda boot pkgset":
        when:
          arch: "aarch64"
        append:
          include:
            # eficommon
            - "efibootmgr"
            # XXX: de-dup?
            # grub-common
            - "grub2-tools"
            - "grub2-tools-extra"
            - "grub2-tools-minimal"
            # arch specific
            - "grub2-efi-aa64-cdboot"
            - "grub2-efi-aa64"
            - "shim-aa64"

  partitioning:
    ids:
      - &prep_partition_dosid "41"
      - &filesystem_linux_dosid "83"
      - &fat16_bdosid "06"
    guids:
      - &bios_boot_partition_guid "21686148-6449-6E6F-744E-656564454649"
      - &efi_system_partition_guid "C12A7328-F81F-11D2-BA4B-00A0C93EC93B"
      - &filesystem_data_guid "0FC63DAF-8483-4772-8E79-3D69D8477DE4"
      - &xboot_ldr_partition_guid "BC13C2FF-59E6-4262-A352-B275FD6F7172"
      - &lvm_partition_guid "E6D6D379-F507-44C2-A23C-238F2A3DF928"
      - &root_partition_x86_64_guid "4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709"
    # static UUIDs for partitions and filesystems
    # NOTE(akoutsou): These are unnecessary and have stuck around since the
    # beginning where (I believe) the goal was to have predictable,
    # reproducible partition tables. They might be removed soon in favour of
    # proper, random UUIDs, with reproducibility being controlled by fixing
    # rng seeds.
    uuids:
      - &bios_boot_partition_uuid "FAC7F1FB-3E8D-4137-A512-961DE09A5549"
      - &root_partition_uuid "6264D520-3FB9-423F-8AB8-7A0A8E3D3562"
      - &data_partition_uuid "CB07C243-BC44-4717-853E-28852021225B"
      - &efi_system_partition_uuid "68B2905B-DF3E-4FB3-80FA-49D1E773AA33"
      - &efi_filesystem_uuid "7B77-95E7"

    default_partition_tables: &default_partition_tables
      x86_64:
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - size: "1 MiB"
            bootable: true
            type: *bios_boot_partition_guid
            uuid: *bios_boot_partition_uuid
          - &default_partition_table_part_efi
            size: "200 MiB"
            type: *efi_system_partition_guid
            uuid: *efi_system_partition_uuid
            payload_type: "filesystem"
            payload:
              type: vfat
              uuid: *efi_filesystem_uuid
              mountpoint: "/boot/efi"
              label: "ESP"
              fstab_options: "defaults,uid=0,gid=0,umask=077,shortname=winnt"
              fstab_freq: 0
              fstab_passno: 2
          - &default_partition_table_part_root
            size: "2 GiB"
            type: *filesystem_data_guid
            uuid: *root_partition_uuid
            payload_type: "filesystem"
            payload: &default_partition_table_part_root_payload
              type: "xfs"
              label: "root"
              mountpoint: "/"
              fstab_options: "defaults"
              fstab_freq: 0
              fstab_passno: 0
      aarch64: &default_partition_table_aarch64
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - *default_partition_table_part_efi
          - *default_partition_table_part_root
      ppc64le:
        uuid: "0x14fc63d2"
        type: "dos"
        partitions:
          - size: "4 MiB"
            bootable: true
            type: *prep_partition_dosid
          - &default_partition_table_part_root_ppc64le
            size: "2 GiB"
            payload_type: "filesystem"
            payload:
              <<: *default_partition_table_part_root_payload
              label: ""
      s390x:
        uuid: "0x14fc63d2"
        type: "dos"
        partitions:
          - <<: *default_partition_table_part_root_ppc64le
            bootable: true

  azure_common_grub2_config: &azure_common_grub2_config
    disable_recovery: true
    disable_submenu: true
    distributor: "$(sed 's, release .*$,,g' /etc/system-release)"
    serial: "serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1"
    timeout: 10
    timeout_style: "countdown"

  azure_image_config: &azure_image_config
    # from CreateAzureDatalossWarningScriptAndUnit
    files:
      - path: &dataloss_script "/usr/local/sbin/temp-disk-dataloss-warning"
        mode: 0755
        data: |
          #!/bin/sh
          # /usr/local/sbin/temp-disk-dataloss-warning
          # Write dataloss warning file on mounted Azure resource disk

          AZURE_RESOURCE_DISK_PART1="/dev/disk/cloud/azure_resource-part1"

          MOUNTPATH=$(grep "$AZURE_RESOURCE_DISK_PART1" /etc/fstab | tr '\t' ' ' | cut -d' ' -f2)
          if [ -z "$MOUNTPATH" ]; then
              echo "There is no mountpoint of $AZURE_RESOURCE_DISK_PART1 in /etc/fstab"
              exit 0
          fi

          if [ "$MOUNTPATH" = "none" ]; then
              echo "Mountpoint of $AZURE_RESOURCE_DISK_PART1 is not a path"
              exit 1
          fi

          if ! mountpoint -q "$MOUNTPATH"; then
              echo "$AZURE_RESOURCE_DISK_PART1 is not mounted at $MOUNTPATH"
              exit 1
          fi

          echo "Creating a dataloss warning file at ${MOUNTPATH}/DATALOSS_WARNING_README.txt"

          cat <<'EOF' > "${MOUNTPATH}/DATALOSS_WARNING_README.txt"
          WARNING: THIS IS A TEMPORARY DISK.

          Any data stored on this drive is SUBJECT TO LOSS and THERE IS NO WAY TO RECOVER IT.

          Please do not use this disk for storing any personal or application data.

          EOF
    systemd_unit:
      - filename: &dataloss_systemd_unit_filename "temp-disk-dataloss-warning.service"
        "unit-type": "system"
        "unit-path": "etc"
        config:
          "Unit":
            Description: "Azure temporary resource disk dataloss warning file creation"
            After: ["multi-user.target", "cloud-final.service"]
          "Service":
            Type: "oneshot"
            ExecStart: [*dataloss_script]
            StandardOutput: "journal+console"
          "Install":
            WantedBy: ["default.target"]
    keyboard:
      keymap: "us"
      "x11-keymap":
        layouts: ["us"]
    update_default_kernel: true
    default_kernel: "kernel-core"
    sysconfig:
      networking: true
      no_zero_conf: true
    enabled_services:
      - "firewalld"
      - "nm-cloud-setup.service"
      - "nm-cloud-setup.timer"
      - "sshd"
      - "waagent"
      - *dataloss_systemd_unit_filename
    sshd_config:
      config:
        ClientAliveInterval: 180
    modprobe:
      - filename: "blacklist-amdgpu.conf"
        commands:
          - command: blacklist
            modulename: "amdgpu"
      - filename: "blacklist-intel-cstate.conf"
        commands:
          - command: blacklist
            modulename: "intel_cstate"
      - filename: "blacklist-floppy.conf"
        commands:
          - command: blacklist
            modulename: "floppy"
      - filename: "blacklist-nouveau.conf"
        commands:
          - command: blacklist
            modulename: "nouveau"
          - command: blacklist
            modulename: "lbm-nouveau"
      - filename: "blacklist-skylake-edac.conf"
        commands:
          - command: blacklist
            modulename: "skx_edac"
      - filename: "blacklist-intel_uncore.conf"
        commands:
          - command: blacklist
            modulename: "intel_uncore"
      - filename: "blacklist-acpi_cpufreq.conf"
        commands:
          - command: blacklist
            modulename: "acpi_cpufreq"
    pwquality:
      config:
        minlen: 6
        minclass: 3
        dcredit: 0
        ucredit: 0
        lcredit: 0
        ocredit: 0
    waagent_config:
      config:
        "ResourceDisk.Format": false
        "ResourceDisk.EnableSwap": false
        "Provisioning.UseCloudInit": true
        "Provisioning.Enabled": false
    grub2_config:
      disable_recovery: true
      disable_submenu: true
      distributor: "$(sed 's, release .*$,,g' /etc/system-release)"
      terminal: ["serial", "console"]
      serial: "serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1"
      timeout: 10
      timeout_style: "countdown"
    udev_rules:
      filename: "/etc/udev/rules.d/68-azure-sriov-nm-unmanaged.rules"
      rules:
        - comment:
            - "Accelerated Networking on Azure exposes a new SRIOV interface to the VM."
            - "This interface is transparently bonded to the synthetic interface,"
            - "so NetworkManager should just ignore any SRIOV interfaces."
        - rule:
            - K: "SUBSYSTEM"
              O: "=="
              V: "net"
            - K: "DRIVERS"
              O: "=="
              V: "hv_pci"
            - K: "ACTION"
              O: "=="
              V: "add"
            - K: "ENV"
              A: "NM_UNMANAGED"
              O: "="
              V: "1"
    systemd_dropin:
      - unit: "nm-cloud-setup.service"
        dropin: "10-rh-enable-for-azure.conf"
        config:
          service:
            environment:
              - key: "NM_CLOUD_SETUP_AZURE"
                value: "yes"
    default_target: "multi-user.target"
    network_manager:
      path: "/etc/NetworkManager/conf.d/99-azure-unmanaged-devices.conf"
      settings:
        keyfile:
          "unmanaged-devices":
            - "driver:mlx4_core"
            - "driver:mlx5_core"
    conditions:
      "rhel needs the rhel release rpm gpg key":
        when:
          distro_name: "rhel"
        shallow_merge:
          gpgkey_files:
            - "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
      "x86_64 specific kernel commandline":
        when:
          arch: "x86_64"
        shallow_merge:
          kernel_options:
            # common
            - "ro"
            - "loglevel=3"
            - "nvme_core.io_timeout=240"
            # x86
            - "console=tty1"
            - "console=ttyS0"
            - "earlyprintk=ttyS0"
            - "rootdelay=300"
      "aarch64 specific kernel commandline":
        when:
          arch: "aarch64"
        shallow_merge:
          kernel_options:
            # common
            - "ro"
            - "loglevel=3"
            - "nvme_core.io_timeout=240"
            # aarch64
            - "console=ttyAMA0"
      "x86_64 grub2 config terminal=serial":
        when:
          arch: "x86_64"
        shallow_merge:
          grub2_config:
            <<: *azure_common_grub2_config
            terminal: ["serial"]
      "aarch64 grub2 config terminal=console":
        when:
          arch: "aarch64"
        shallow_merge:
          grub2_config:
            <<: *azure_common_grub2_config
            terminal: ["console"]

image_config:
  default:
    default_kernel: "kernel"
    default_oscap_datastream: "/usr/share/xml/scap/ssg/content/ssg-rhel10-ds.xml"
    install_weak_deps: true
    locale: "C.UTF-8"
    sysconfig:
      networking: true
      no_zero_conf: true
    timezone: "UTC"
    update_default_kernel: true
  conditions:
    "centos oscap datastream path":
      when:
        distro_name: "centos"
      shallow_merge:
        default_oscap_datastream: "/usr/share/xml/scap/ssg/content/ssg-cs10-ds.xml"

image_types:
  # XXX: not a real pkgset but the "os" pipeline pkgset for image-installer
  # find a nicer way to represent this
  bare_metal:
    package_sets: &bare_metal_pkgset
      os:
        - *distro_build_pkgset
        - include:
            - "@core"
            - "chrony"
            - "cockpit-system"
            - "cockpit-ws"
            - "dnf-utils"
            - "dosfstools"
            - "firewalld"
            - "iwl1000-firmware"
            - "iwl100-firmware"
            - "iwl105-firmware"
            - "iwl135-firmware"
            - "iwl2000-firmware"
            - "iwl2030-firmware"
            - "iwl3160-firmware"
            - "iwl5000-firmware"
            - "iwl5150-firmware"
            - "iwl6000g2a-firmware"
            - "iwl6000g2b-firmware"
            - "iwl6050-firmware"
            - "iwl7260-firmware"
            - "lvm2"
            - "net-tools"
            - "nfs-utils"
            - "oddjob"
            - "oddjob-mkhomedir"
            - "policycoreutils"
            - "psmisc"
            - "python3-jsonschema"
            - "qemu-guest-agent"
            - "redhat-release"
            - "redhat-release-eula"
            - "rsync"
            - "tar"
            - "tcpdump"
            - "tuned"
          exclude:
            - "dracut-config-rescue"
          conditions:
            "add subscription-manager-cockpit on rhel":
              when:
                distro_name: "rhel"
              append:
                include:
                  - "subscription-manager-cockpit"

  qcow2: &qcow2
    filename: "disk.qcow2"
    mime_type: "application/x-qemu-disk"
    # note that unlike fedora rhel does not use the environment.KVM
    # for unknown reasons
    bootable: true
    default_size: 10_737_418_240  # 10 * datasizes.GibiByte
    image_func: "disk"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "image", "qcow2"]
    exports: ["qcow2"]
    required_partition_sizes: *default_required_dir_sizes
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "qcow2"
      - <<: *aarch64_platform
        image_format: "qcow2"
      - <<: *ppc64le_bios_platform
        image_format: "qcow2"
      - <<: *s390x_zipl_platform
        image_format: "qcow2"
    image_config: &qcow2_image_config
      default_target: "multi-user.target"
      kernel_options: ["console=tty0", "console=ttyS0,115200n8", "no_timer_check"]
      conditions:
        "tweak the rhsm config on rhel":
          when:
            distro_name: "rhel"
          shallow_merge:
            rhsm_config:
              "no-subscription":
                dnf_plugin:
                  product_id:
                    enabled: false
                  subscription_manager:
                    enabled: false
    partition_table:
      <<: *default_partition_tables
    package_sets:
      os:
        - &qcow2_pkgset
          include:
            - "@core"
            - "chrony"
            - "cloud-init"
            - "cloud-utils-growpart"
            - "cockpit-system"
            - "cockpit-ws"
            - "dnf-utils"
            - "dosfstools"
            - "nfs-utils"
            - "oddjob"
            - "oddjob-mkhomedir"
            - "psmisc"
            - "python3-jsonschema"
            - "qemu-guest-agent"
            - "redhat-release"
            - "redhat-release-eula"
            - "rsync"
            - "tar"
            - "tuned"
            - "tcpdump"
          exclude:
            - "aic94xx-firmware"
            - "alsa-firmware"
            - "alsa-lib"
            - "alsa-tools-firmware"
            - "biosdevname"
            - "dnf-plugin-spacewalk"
            - "dracut-config-rescue"
            - "fedora-release"
            - "fedora-repos"
            - "firewalld"
            - "iprutils"
            - "ivtv-firmware"
            - "iwl1000-firmware"
            - "iwl100-firmware"
            - "iwl105-firmware"
            - "iwl135-firmware"
            - "iwl2000-firmware"
            - "iwl2030-firmware"
            - "iwl3160-firmware"
            - "iwl3945-firmware"
            - "iwl4965-firmware"
            - "iwl5000-firmware"
            - "iwl5150-firmware"
            - "iwl6000-firmware"
            - "iwl6000g2a-firmware"
            - "iwl6000g2b-firmware"
            - "iwl6050-firmware"
            - "iwl7260-firmware"
            - "langpacks-*"
            - "langpacks-en"
            - "libertas-sd8787-firmware"
            - "plymouth"
            - "rng-tools"
            - "udisks2"
          conditions:
            "add insights pkgs on rhel":
              when:
                distro_name: "rhel"
              append:
                include:
                  - "insights-client"
                  - "subscription-manager-cockpit"

  "vagrant-libvirt": &vagrant_libvirt
    <<: *qcow2
    filename: "vagrant-libvirt.box"
    mime_type: "application/x-tar"
    bootable: true
    default_size: 10_737_418_240  # 10 * datasizes.GibiByte
    image_func: "disk"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "image", "vagrant", "archive"]
    exports: ["archive"]
    required_partition_sizes: *default_required_dir_sizes
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "vagrant_libvirt"
      - <<: *aarch64_platform
        image_format: "vagrant_libvirt"
    image_config:
      <<: *qcow2_image_config
      users:
        - name: "vagrant"
          # yamllint disable rule:line-length
          key: |
            ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key
            ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN1YdxBpNlzxDqfJyw/QKow1F+wvG9hXGoqiysfJOn5Y vagrant insecure public key
          # yamllint enable rule:line-length
      files:
        - path: "/etc/sudoers.d/vagrant"
          user: "root"
          group: "root"
          mode: 440
          data: |
            vagrant ALL=(ALL) NOPASSWD: ALL

  "vagrant-virtualbox":
    <<: *vagrant_libvirt
    filename: "vagrant-virtualbox.box"
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "vagrant_virtualbox"

  oci:
    <<: *qcow2
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "qcow2"

  vhd: &vhd
    <<: *qcow2
    filename: "disk.vhd"
    mime_type: "application/x-vhd"
    default_size: 4_294_967_296  # 4 * datasizes.GibiByte
    payload_pipelines: ["os", "image", "vpc"]
    exports: ["vpc"]
    # note that unlike fedora no "environment.Azure" is used here for
    # unknown reasons
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "vhd"
      - <<: *aarch64_platform
        image_format: "vhd"
    # based on https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/deploying_rhel_9_on_microsoft_azure/assembly_deploying-a-rhel-image-as-a-virtual-machine-on-microsoft-azure_cloud-content-azure#making-configuration-changes_configure-the-image-azure
    image_config: &image_config_vhd
      <<: *azure_image_config
      time_synchronization:
        refclocks:
          - driver:
              name: "PHC"
              path: "/dev/ptp_hyperv"
            poll: 3
            dpoll: -2
            offset: 0.0
      cloud_init:
        - filename: "10-azure-kvp.cfg"
          config:
            reporting:
              logging:
                type: "log"
              telemetry:
                type: "hyperv"
        - filename: "91-azure_datasource.cfg"
          config:
            datasource:
              azure:
                apply_network_config: false
            datasource_list:
              - "Azure"
    partition_table:
      <<: *default_partition_tables
    package_sets:
      os:
        - &vhd_pkgset
          include:
            - "@Server"
            - "bzip2"
            - "cloud-init"
            - "cloud-utils-growpart"
            - "dracut-config-generic"
            - "efibootmgr"
            - "hyperv-daemons"
            - "kernel-core"
            - "kernel-modules"
            - "kernel"
            - "langpacks-en"
            - "lvm2"
            - "NetworkManager"
            - "NetworkManager-cloud-setup"
            - "nvme-cli"
            - "patch"
            - "rng-tools"
            - "selinux-policy-targeted"
            - "system-reinstall-bootc"
            - "uuid"
            - "WALinuxAgent"
            - "yum-utils"
          exclude:
            - "aic94xx-firmware"
            - "alsa-firmware"
            - "alsa-lib"
            - "alsa-sof-firmware"
            - "alsa-tools-firmware"
            - "biosdevname"
            - "bolt"
            - "buildah"
            - "cockpit-podman"
            - "containernetworking-plugins"
            - "dnf-plugin-spacewalk"
            - "dracut-config-rescue"
            - "glibc-all-langpacks"
            - "iprutils"
            - "ivtv-firmware"
            - "iwl100-firmware"
            - "iwl1000-firmware"
            - "iwl105-firmware"
            - "iwl135-firmware"
            - "iwl2000-firmware"
            - "iwl2030-firmware"
            - "iwl3160-firmware"
            - "iwl3945-firmware"
            - "iwl4965-firmware"
            - "iwl5000-firmware"
            - "iwl5150-firmware"
            - "iwl6000-firmware"
            - "iwl6000g2a-firmware"
            - "iwl6000g2b-firmware"
            - "iwl6050-firmware"
            - "iwl7260-firmware"
            - "libertas-sd8686-firmware"
            - "libertas-sd8787-firmware"
            - "libertas-usb8388-firmware"
            - "microcode_ctl"
            - "NetworkManager-config-server"
            - "plymouth"
            - "podman"
            - "python3-dnf-plugin-spacewalk"
            - "python3-hwdata"
            - "python3-rhnlib"
            - "rhn-check"
            - "rhn-client-tools"
            - "rhn-setup"
            - "rhnlib"
            - "rhnsd"
            - "usb_modeswitch"
          conditions: &conditions_pkgsets_insights_client_on_rhel
            "add insights client on rhel":
              when:
                distro_name: "rhel"
              append:
                include:
                  - "insights-client"

  "azure-rhui": &azure_rhui
    <<: *vhd
    payload_pipelines: ["os", "image", "vpc", "xz"]
    exports: ["xz"]
    compression: "xz"
    filename: "disk.vhd.xz"
    partition_table:
      x86_64:
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        size: "64 GiB"
        partitions:
          - &azure_rhui_part_boot_efi
            size: "500 MiB"
            type: *efi_system_partition_guid
            UUID: *efi_system_partition_uuid
            payload_type: "filesystem"
            payload:
              type: "vfat"
              uuid: *efi_filesystem_uuid
              mountpoint: "/boot/efi"
              fstab_options: "defaults,uid=0,gid=0,umask=077,shortname=winnt"
              fstab_freq: 0
              fstab_passno: 2
          # NB: we currently don't support /boot on LVM
          - &azure_rhui_part_boot
            size: "1 GiB"
            type: *filesystem_data_guid
            uuid: *data_partition_uuid
            payload_type: "filesystem"
            payload:
              type: "xfs"
              mountpoint: "/boot"
              fstab_options: "defaults"
              fstab_freq: 0
              fstab_passno: 0
          - size: "2 MiB"
            bootable: true
            type: *bios_boot_partition_guid
            uuid: *bios_boot_partition_uuid
          - &azure_rhui_part_lvm
            type: *lvm_partition_guid
            uuid: *root_partition_uuid
            payload_type: "lvm"
            payload:
              name: "rootvg"
              description: "built with lvm2 and osbuild"
              logical_volumes:
                - size: "1 GiB"
                  name: "homelv"
                  payload_type: "filesystem"
                  payload:
                    type: "xfs"
                    label: "home"
                    mountpoint: "/home"
                    fstab_options: "defaults"
                - size: "2 GiB"
                  name: "rootlv"
                  payload_type: "filesystem"
                  payload:
                    type: "xfs"
                    label: "root"
                    mountpoint: "/"
                    fstab_options: "defaults"
                - size: "2 GiB"
                  name: "tmplv"
                  payload_type: "filesystem"
                  payload:
                    type: "xfs"
                    label: "tmp"
                    mountpoint: "/tmp"
                    fstab_options: "defaults"
                - size: "10 GiB"
                  name: "usrlv"
                  payload_type: "filesystem"
                  payload:
                    type: "xfs"
                    label: "usr"
                    mountpoint: "/usr"
                    fstab_options: "defaults"
                - size: "10 GiB"
                  name: "varlv"
                  payload_type: "filesystem"
                  payload:
                    type: "xfs"
                    label: "var"
                    mountpoint: "/var"
                    fstab_options: "defaults"
      aarch64:
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        size: "64 GiB"
        partitions:
          - *azure_rhui_part_boot_efi
          # NB: we currently don't support /boot on LVM
          - *azure_rhui_part_boot
          - *azure_rhui_part_lvm

  "azure-sap-rhui":
    <<: *azure_rhui
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "vhd"
    image_config:
      <<: [*image_config_vhd, *sap_image_config]
    package_sets:
      os:
        - *vhd_pkgset
        - *sap_base_pkgset
        - *sap_extras_pkgset

  azure-sapapps-rhui:
    <<: *azure_rhui
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "vhd"
    image_config:
      <<: [*image_config_vhd, *sapapps_image_config]
    package_sets:
      os:
        - *vhd_pkgset
        - *sap_base_pkgset

  tar:
    filename: "root.tar.xz"
    mime_type: "application/x-tar"
    image_func: "tar"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "archive"]
    exports: ["archive"]
    package_sets:
      os:
        - include:
            - "policycoreutils"
            - "selinux-policy-targeted"
          exclude:
            - "rng-tools"
    platforms:
      - arch: "x86_64"
      - arch: "aarch64"
      - arch: "ppc64le"
      - arch: "s390x"

  vmdk: &vmdk
    filename: "disk.vmdk"
    mime_type: "application/x-vmdk"
    bootable: true
    default_size: 4_294_967_296  # 4 * datasizes.GibiByte
    image_func: "disk"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "image", "vmdk"]
    exports: ["vmdk"]
    required_partition_sizes: *default_required_dir_sizes
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "vmdk"
    image_config:
      kernel_options:
        - "ro"
    partition_table:
      <<: *default_partition_tables
    package_sets:
      os:
        - include:
            - "@core"
            - "chrony"
            - "cloud-init"
            - "firewalld"
            - "langpacks-en"
            - "open-vm-tools"
            - "tuned"
          exclude:
            - "dracut-config-rescue"
            - "rng-tools"

  ova:
    <<: *vmdk
    filename: "image.ova"
    mime_type: "application/ovf"
    payload_pipelines: ["os", "image", "vmdk", "ovf", "archive"]
    exports: ["archive"]
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "ova"

  ami: &ami
    filename: "image.raw"
    mime_type: "application/octet-stream"
    image_func: "disk"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "image"]
    exports: ["image"]
    bootable: true
    default_size: 10_737_418_240  # 10 * datasizes.GibiByte
    required_partition_sizes: *default_required_dir_sizes
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "raw"
      - <<: *aarch64_platform
        image_format: "raw"
    image_config: &ami_image_config
      time_synchronization:
        servers:
          - hostname: "169.254.169.123"
            prefer: true
            iburst: true
            minpoll: 4
            maxpoll: 4
        # empty string will remove any occurrences of the option
        # from the configuration
        leapsectz: ""
      keyboard:
        keymap: "us"
        "x11-keymap":
          layouts: ["us"]
      enabled_services:
        - "sshd"
        - "NetworkManager"
        - "nm-cloud-setup.service"
        - "nm-cloud-setup.timer"
        - "cloud-init"
        - "cloud-init-local"
        - "cloud-config"
        - "cloud-final"
        - "reboot.target"
        - "tuned"
      default_target: "multi-user.target"
      update_default_kernel: true
      default_kernel: "kernel"
      sysconfig:
        networking: true
        no_zero_conf: true
      systemd_logind:
        - filename: "00-getty-fixes.conf"
          config:
            login:
              nautovts: 0
      cloud_init:
        - filename: "00-rhel-default-user.cfg"
          config:
            system_info:
              default_user:
                name: "ec2-user"
      modprobe:
        - filename: "blacklist-nouveau.conf"
          commands:
            - command: blacklist
              modulename: "nouveau"
        - filename: "blacklist-amdgpu.conf"
          commands:
            - command: blacklist
              modulename: "amdgpu"
        # https://issues.redhat.com/browse/RHEL-71926
        - filename: "blacklist-i2c_piix4.conf"
          commands:
            - command: blacklist
              modulename: "i2c_piix4"
      systemd_dropin:
        # RHBZ#1822863
        - unit: "nm-cloud-setup.service"
          dropin: "10-rh-enable-for-ec2.conf"
          config:
            service:
              environment:
                - key: "NM_CLOUD_SETUP_EC2"
                  value: "yes"
      sshd_config:
        config:
          PasswordAuthentication: false
      conditions: &ami_image_config_cond
        "we need dracut conf with nvme/xen on x86":
          when:
            arch: "x86_64"
          shallow_merge:
            dracut_conf:
              - filename: "ec2.conf"
                config:
                  add_drivers:
                    - "nvme"
                    - "xen-blkfront"
        "x86_64 specific kopts":
          when:
            arch: "x86_64"
          shallow_merge:
            # TODO: move these to the EC2 environment
            kernel_options:
              # common
              - "console=tty0"
              - "console=ttyS0,115200n8"
              - "nvme_core.io_timeout=4294967295"
        "aarch64 specific kopts":
          when:
            arch: "aarch64"
          shallow_merge:
            # TODO: move these to the EC2 environment
            kernel_options:
              # XXX: duplicated with above x86_64 kernel defaults
              - "console=tty0"
              - "console=ttyS0,115200n8"
              - "nvme_core.io_timeout=4294967295"
              # aarch64 specific
              - "iommu.strict=0"
    partition_table:
      <<: *default_partition_tables
    package_sets:
      os:
        - &ami_pkgset
          include:
            - "@core"
            - "chrony"
            - "cloud-init"
            - "cloud-utils-growpart"
            - "dhcpcd"
            - "yum-utils"
            - "dracut-config-generic"
            - "grub2"
            - "langpacks-en"
            - "NetworkManager-cloud-setup"
            - "redhat-release"
            - "redhat-release-eula"
            - "rsync"
            - "system-reinstall-bootc"
            - "tuned"
            - "tar"
          exclude:
            - "aic94xx-firmware"
            - "alsa-firmware"
            - "alsa-tools-firmware"
            - "biosdevname"
            - "firewalld"
            - "iprutils"
            - "ivtv-firmware"
            - "iwl1000-firmware"
            - "iwl100-firmware"
            - "iwl105-firmware"
            - "iwl135-firmware"
            - "iwl2000-firmware"
            - "iwl2030-firmware"
            - "iwl3160-firmware"
            - "iwl3945-firmware"
            - "iwl4965-firmware"
            - "iwl5000-firmware"
            - "iwl5150-firmware"
            - "iwl6000-firmware"
            - "iwl6000g2a-firmware"
            - "iwl6000g2b-firmware"
            - "iwl6050-firmware"
            - "iwl7260-firmware"
            - "libertas-sd8686-firmware"
            - "libertas-sd8787-firmware"
            - "libertas-usb8388-firmware"
            - "plymouth"
            # RHBZ#2064087
            - "dracut-config-rescue"
            # RHBZ#2075815
            - "qemu-guest-agent"
          conditions:
            <<: *conditions_pkgsets_insights_client_on_rhel

  # RHEL internal-only x86_64 EC2 image type
  ec2: &ec2
    <<: *ami
    payload_pipelines: ["os", "image", "xz"]
    exports: ["xz"]
    filename: "image.raw.xz"
    compression: "xz"

  "ec2-ha":
    <<: *ec2
    filename: "image.raw.xz"
    compression: "xz"
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "raw"
    package_sets:
      os:
        - *ami_pkgset
        - include:
            - "fence-agents-all"
            - "pacemaker"
            - "pcs"

  "ec2-sap":
    <<: *ec2
    filename: "image.raw.xz"
    compression: "xz"
    platforms:
      - <<: *x86_64_bios_platform
        image_format: "raw"
    package_sets:
      os:
        - *ami_pkgset
        - *sap_base_pkgset
        - *sap_extras_pkgset
    image_config:
      <<: [*ami_image_config, *sap_image_config]
      conditions:
        <<: *ami_image_config_cond
        # this needs to override the original ami key because
        # we want everything from the ami config *except* the
        # kernel comandline
        "x86_64 specific kopts":
          when:
            arch: "x86_64"
          shallow_merge:
            kernel_options:
              # XXX: duplicated with ami.image_config.kernel_options :(
              - "console=tty0"
              - "console=ttyS0,115200n8"
              - "nvme_core.io_timeout=4294967295"
              # amiSapKernelOptions()
              - "processor.max_cstate=1"
              - "intel_idle.max_cstate=1"

  wsl:
    filename: "image.wsl"
    mime_type: "application/x-tar"
    image_func: "tar"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "archive", "xz"]
    exports: ["xz"]
    compression: "xz"
    platforms:
      - arch: "x86_64"
      - arch: "aarch64"
    image_config:
      cloud_init:
        - filename: "99_wsl.cfg"
          config:
            datasource_list:
              - "WSL"
              - "None"
            network:
              config: "disabled"
      no_selinux: true
      wsl: &wsl_config
        config:
          boot_systemd: true
        distribution_config: &wsl_distribution_config
          shortcut:
            enabled: true
            icon: /usr/share/pixmaps/fedora-logo.ico
          oobe: &wsl_distribution_oobe_config
            default_uid: 1000
      conditions:
        "wsl config for rhel":
          when:
            distro_name: "rhel"
          shallow_merge:
            wsl:
              <<: *wsl_config
              distribution_config:
                <<: *wsl_distribution_config
                oobe:
                  <<: *wsl_distribution_oobe_config
                  default_name: RedHatEnterpriseLinux-%s
        "wsl config for centos":
          when:
            distro_name: "centos"
          shallow_merge:
            wsl:
              <<: *wsl_config
              distribution_config:
                <<: *wsl_distribution_config
                oobe:
                  <<: *wsl_distribution_oobe_config
                  default_name: CentOS-%s
        "wsl config for almalinux":
          when:
            distro_name: "almalinux"
          shallow_merge:
            wsl: &wsl_distribution_config_almalinux
              <<: *wsl_config
              distribution_config:
                <<: *wsl_distribution_config
                oobe:
                  <<: *wsl_distribution_oobe_config
                  default_name: AlmaLinux-%s
        "wsl config for almalinuxkitten":
          when:
            distro_name: "almalinux_kitten"
          shallow_merge:
            wsl:
              <<: *wsl_distribution_config_almalinux
    package_sets:
      os:
        - include:
            - "alternatives"
            - "audit-libs"
            - "basesystem"
            - "bash"
            - "ca-certificates"
            - "cloud-init"
            - "coreutils-single"
            - "crypto-policies-scripts"
            - "curl-minimal"
            - "dejavu-sans-fonts"
            - "dnf"
            - "filesystem"
            - "findutils"
            - "gdb-gdbserver"
            # Differs from official UBI, as we don't include CRB repos
            # - "gdbm"
            - "glibc-minimal-langpack"
            - "gmp"
            - "gnupg2"
            - "gobject-introspection"
            - "hostname"
            - "langpacks-en"
            - "libcurl-minimal"
            - "openssh-server"
            - "openssl"
            - "pam"
            - "passwd"
            - "procps-ng"
            - "python3"
            - "python3-inotify"
            - "redhat-logos"
            - "redhat-release"
            - "rootfiles"
            - "rpm"
            - "sed"
            - "setup"
            - "shadow-utils"
            - "subscription-manager"
            - "sudo"
            - "systemd"
            - "tar"
            - "tpm2-tss"
            - "tzdata"
            - "util-linux"
            - "vim-minimal"
            - "yum"
          exclude:
            - "gawk-all-langpacks"
            - "glibc-gconv-extra"
            - "glibc-langpack-en"
            - "openssl-pkcs11"
            - "python-unversioned-command"
            - "redhat-release-eula"
            - "rpm-plugin-systemd-inhibit"

  "image-installer":
    filename: "installer.iso"
    mime_type: "application/x-iso9660-image"
    bootable: true
    boot_iso: true
    image_func: "image_installer"
    # We don't know the variant of the OS pipeline being installed
    iso_label: "Unknown"
    build_pipelines: ["build"]
    payload_pipelines:
      - "anaconda-tree"
      - "efiboot-tree"
      - "os"
      - "bootiso-tree"
      - "bootiso"
    exports: ["bootiso"]
    required_partition_sizes: *default_required_dir_sizes
    image_config:
      iso_rootfs_type: "squashfs"
      conditions:
        "x86_64 uses grub2":
          when:
            arch: "x86_64"
          shallow_merge:
            iso_boot_type: "grub2"
    installer_config:
      additional_dracut_modules:
        - "nvdimm"  # non-volatile DIMM firmware (provides nfit, cuse, and nd_e820)
        - "net-lib"
      additional_drivers:
        - "ipmi_devintf"
        - "ipmi_msghandler"
      # see commit c6bfb22f54, controls the kickstart location
      iso_root_kickstart: true
    platforms:
      - *x86_64_installer_platform
      - *aarch64_platform
    package_sets:
      <<: *bare_metal_pkgset
      installer:
        - *installer_pkgset
        - *anaconda_boot_pkgset
        - include:
            - "@hardware-support"
            - "alsa-firmware"
            - "alsa-tools-firmware"
            - "anaconda"
            - "anaconda-dracut"
            - "anaconda-install-img-deps"
            - "anaconda-widgets"
            - "audit"
            - "bind-utils"
            - "bzip2"
            - "cryptsetup"
            - "curl"
            - "dbus-x11"
            - "default-fonts-core-sans"
            - "default-fonts-other-sans"
            - "dejavu-sans-fonts"
            - "dejavu-sans-mono-fonts"
            - "device-mapper-persistent-data"
            - "dmidecode"
            - "dnf"
            - "dracut-config-generic"
            - "dracut-network"
            - "efibootmgr"
            - "ethtool"
            - "fcoe-utils"
            - "ftp"
            - "gdb-gdbserver"
            - "glibc-all-langpacks"
            - "gnome-kiosk"
            - "google-noto-sans-cjk-ttc-fonts"
            - "grub2-tools"
            - "grub2-tools-extra"
            - "grub2-tools-minimal"
            - "grubby"
            - "gsettings-desktop-schemas"
            - "hdparm"
            - "hexedit"
            - "hostname"
            - "initscripts"
            - "ipmitool"
            - "iwl1000-firmware"
            - "iwl100-firmware"
            - "iwl105-firmware"
            - "iwl135-firmware"
            - "iwl2000-firmware"
            - "iwl2030-firmware"
            - "iwl3160-firmware"
            - "iwl5000-firmware"
            - "iwl5150-firmware"
            - "iwl6000g2a-firmware"
            - "iwl6000g2b-firmware"
            - "iwl6050-firmware"
            - "iwl7260-firmware"
            - "jomolhari-fonts"
            - "kbd"
            - "kbd-misc"
            - "kdump-anaconda-addon"
            - "kernel"
            - "less"
            - "libblockdev-lvm-dbus"
            - "libibverbs"
            - "librsvg2"
            - "linux-firmware"
            - "lldpad"
            - "lsof"
            - "madan-fonts"
            - "mtr"
            - "mt-st"
            - "net-tools"
            - "nfs-utils"
            - "nmap-ncat"
            - "nm-connection-editor"
            - "nss-tools"
            - "openssh-clients"
            - "openssh-server"
            # the package is not yet available on c10s / el10
            # "oscap-anaconda-addon"
            - "ostree"
            - "pciutils"
            - "perl-interpreter"
            - "pigz"
            - "plymouth"
            - "prefixdevname"
            - "python3-pyatspi"
            - "rdma-core"
            - "redhat-release-eula"
            - "rng-tools"
            - "rpcbind"
            - "rpm-ostree"
            - "rsync"
            - "rsyslog"
            - "selinux-policy-targeted"
            - "sg3_utils"
            - "sil-padauk-fonts"
            - "smartmontools"
            - "spice-vdagent"
            - "strace"
            - "systemd"
            - "tar"
            - "udisks2"
            - "udisks2-iscsi"
            - "usbutils"
            - "vim-minimal"
            - "volume_key"
            - "wget"
            - "xfsdump"
            - "xfsprogs"
            - "xz"
          conditions:
            "x86_64 specific pkgs for image installer":
              when:
                arch: "x86_64"
              append:
                include:
                  - "biosdevname"
                  - "dmidecode"
                  - "grub2-tools-efi"
                  - "memtest86+"
            "aarch64 specific pkgs for image installer":
              when:
                arch: "aarch64"
              append:
                include:
                  - "dmidecode"

  gce:
    filename: "image.tar.gz"
    mime_type: "application/gzip"
    image_func: "disk"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "image", "archive"]
    exports: ["archive"]
    bootable: true
    default_size: 21_474_836_480  # 20 * datasizes.GibiByte
    required_partition_sizes: *default_required_dir_sizes
    platforms:
      - <<: *x86_64_uefi_platform
        image_format: "gce"
    image_config:
      kernel_options: ["biosdevname=0", "scsi_mod.use_blk_mq=Y", "console=ttyS0,38400n8d"]
      time_synchronization:
        servers:
          - hostname: "metadata.google.internal"
      firewall:
        default_zone: "trusted"
      enabled_services:
        - "sshd"
        - "rngd"
        - "dnf-automatic.timer"
        # TODO: remove cloud-init services once we switch back to GCP guest tools
        - "cloud-init"
        - "cloud-init-local"
        - "cloud-config"
        - "cloud-final"
      disabled_services:
        - "sshd-keygen@"
        - "reboot.target"
      default_target: "multi-user.target"
      keyboard:
        keymap: "us"
      dnf_config:
        options:
          - config:
              main:
                ipresolve: "4"
      dnf_automatic_config:
        config:
          commands:
            apply_updates: true
            upgrade_type: "security"
      yum_repos:
        - filename: "google-cloud.repo"
          repos:
            - id: "google-compute-engine"
              name: "Google Compute Engine"
              # TODO: use el10 repo once it's available
              baseurl:
                - "https://packages.cloud.google.com/yum/repos/google-compute-engine-el9-x86_64-stable"
              enabled: true
              # TODO: enable GPG check once Google stops using SHA-1 in their keys
              # https://issuetracker.google.com/issues/360905189
              gpgcheck: false
              repo_gpgcheck: false
              gpgkey:
                - "https://packages.cloud.google.com/yum/doc/yum-key.gpg"
                - "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
      sshd_config:
        config:
          PasswordAuthentication: false
          ClientAliveInterval: 420
          PermitRootLogin: false
      update_default_kernel: true
      default_kernel: "kernel-core"
      # XXX: ensure the "old" behavior is preserved (that is
      # likely a bug) where for GCE the sysconfig network
      # options are not set because the merge of imageConfig
      # is shallow and the previous setup was changing the
      # kernel without also changing the network options.
      sysconfig: {}
      modprobe:
        - filename: "blacklist-floppy.conf"
          commands:
            - command: blacklist
              modulename: "floppy"
      gcp_guest_agent_config:
        config_scope: "distro"
        config:
          "InstanceSetup":
            set_boto_config: false
    partition_table:
      # TODO: the base partition table still contains the BIOS boot
      # partition, but the image is UEFI-only
      <<: *default_partition_tables
    package_sets:
      os:
        - include:
            - "@core"
            - "langpacks-en"  # not in Google's KS
            - "acpid"
            - "dnf-automatic"
            - "net-tools"
            - "python3"
            - "rng-tools"
            - "tar"
            - "vim"
            # GCE guest tools
            # TODO: uncomment once the package is available
            # the el9 version depends on libboost_regex.so.1.75.0()(64bit), which is not available on el10
            # - "google-compute-engine"
            - "google-osconfig-agent"
            # Requires gdisk which was removed late in the RHEL 10 development cycle
            # - "gce-disk-expand"
            # cloud-init is a replacement for- "google-compute-engine" remove once the package is available
            - "cloud-init"
            # 'cloud-utils-growpart' is needed by cloud-init to be able to resize the root partition. Remove once
            # we move to GCP guest tools
            - cloud-utils-growpart
            # Not explicitly included in GCP kickstart, but present on the image
            # for time synchronization
            - "chrony"
            - "timedatex"
            # EFI
            - "grub2-tools"
            - "grub2-tools-minimal"
            # Performance tuning
            - "tuned"
          exclude:
            - "alsa-utils"
            - "b43-fwcutter"
            - "dmraid"
            - "dracut-config-rescue"
            - "eject"
            - "gpm"
            - "irqbalance"
            - "microcode_ctl"
            - "smartmontools"
            - "aic94xx-firmware"
            - "atmel-firmware"
            - "b43-openfwwf"
            - "bfa-firmware"
            - "ipw2100-firmware"
            - "ipw2200-firmware"
            - "ivtv-firmware"
            - "iwl100-firmware"
            - "iwl105-firmware"
            - "iwl135-firmware"
            - "iwl1000-firmware"
            - "iwl2000-firmware"
            - "iwl2030-firmware"
            - "iwl3160-firmware"
            - "iwl3945-firmware"
            - "iwl4965-firmware"
            - "iwl5000-firmware"
            - "iwl5150-firmware"
            - "iwl6000-firmware"
            - "iwl6000g2a-firmware"
            - "iwl6050-firmware"
            - "iwl7260-firmware"
            - "kernel-firmware"
            - "libertas-usb8388-firmware"
            - "ql2100-firmware"
            - "ql2200-firmware"
            - "ql23xx-firmware"
            - "ql2400-firmware"
            - "ql2500-firmware"
            - "rt61pci-firmware"
            - "rt73usb-firmware"
            - "xorg-x11-drv-ati-firmware"
            - "zd1211-firmware"
            # RHBZ#2075815
            - "qemu-guest-agent"
          conditions:
            <<: *conditions_pkgsets_insights_client_on_rhel

  "azure-cvm":
    <<: *vhd
    filename: "disk.vhd.xz"
    mime_type: "application/xz"
    payload_pipelines: ["os", "image", "vpc", "xz"]
    exports: ["xz"]
    compression: "xz"
    default_size: 34_359_738_368  # 32 * datasizes.GibiByte
    platforms:
      - arch: "x86_64"
        bootloader: "uki"
        image_format: "vhd"
        uefi_vendor: "{{.DistroVendor}}"
        packages:
          uki:
            - "efibootmgr"
            - "kernel-uki-virt-addons"  # provides useful cmdline utilities for the UKI
            - "shim-x64"
            - "uki-direct"
    image_config:
      <<: *azure_image_config
      default_kernel: "kernel-uki-virt"
      default_kernel_name: "kernel-uki-virt"
      no_bls: true
      cloud_init:
        - filename: "91-azure_datasource.cfg"
          config:
            datasource:
              azure:
                apply_network_config: false
            datasource_list:
              - "Azure"
    package_sets:
      os:
        - include:
            - "@minimal-environment"
            - "chrony"
            - "cloud-init"
            - "cloud-utils-growpart"
            - "cryptsetup"
            - "NetworkManager-cloud-setup"
            - "openssh-server"
            - "redhat-cloud-client-configuration"
            - "redhat-release"
            - "tpm2-tools"
            - "WALinuxAgent"
        - exclude:
            - "dracut-config-rescue"
            - "grubby"
            - "iwl*"
            # In EL9 we exclude linux-firmware* (note the asterisk).
            # In EL10, packages in the minimal-environment group require
            # linux-firmware-whence, so we only exclude the linux-firmware
            # package here.
            - "linux-firmware"
            - "os-prober"
    partition_table:
      x86_64:
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - size: 264_241_152  # 52 MiB
            type: *efi_system_partition_guid
            uuid: *efi_system_partition_uuid
            payload_type: "filesystem"
            payload:
              type: vfat
              uuid: *efi_filesystem_uuid
              mountpoint: "/boot/efi"
              label: "ESP"
              fstab_options: "defaults,uid=0,gid=0,umask=077,shortname=winnt"
              fstab_freq: 0
              fstab_passno: 2
          - size: 5_368_709_120  # 5 * datasizes.GibiByte,
            type: *root_partition_x86_64_guid
            payload_type: "filesystem"
            payload:
              type: "ext4"
              label: "root"
              mountpoint: "/"
              fstab_options: "defaults"
              fstab_freq: 0
              fstab_passno: 0
