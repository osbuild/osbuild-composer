---
.common:
  ec2_common_pkgset: &ec2_common_pkgset
    include:
      - "@core"
      - "authselect-compat"
      - "chrony"
      - "cloud-init"
      - "cloud-utils-growpart"
      - "dhcp-client"
      - "dracut-config-generic"
      - "dracut-norescue"
      - "gdisk"
      - "grub2"
      - "langpacks-en"
      - "NetworkManager"
      - "NetworkManager-cloud-setup"
      - "redhat-release"
      - "redhat-release-eula"
      - "rsync"
      - "tar"
      - "yum-utils"
    exclude:
      - "aic94xx-firmware"
      - "alsa-firmware"
      - "alsa-tools-firmware"
      - "biosdevname"
      - "firewalld"
      - "iprutils"
      - "ivtv-firmware"
      - "iwl1000-firmware"
      - "iwl100-firmware"
      - "iwl105-firmware"
      - "iwl135-firmware"
      - "iwl2000-firmware"
      - "iwl2030-firmware"
      - "iwl3160-firmware"
      - "iwl3945-firmware"
      - "iwl4965-firmware"
      - "iwl5000-firmware"
      - "iwl5150-firmware"
      - "iwl6000-firmware"
      - "iwl6000g2a-firmware"
      - "iwl6000g2b-firmware"
      - "iwl6050-firmware"
      - "iwl7260-firmware"
      - "libertas-sd8686-firmware"
      - "libertas-sd8787-firmware"
      - "libertas-usb8388-firmware"
      - "plymouth"
      # RHBZ#2075815
      - "qemu-guest-agent"
    conditions: &conditions_for_insights_client
      "add insights client on rhel":
        when:
          distro_name: "rhel"
        append:
          include:
            - "insights-client"

  azure_common_pkgset: &azure_common_pkgset
    include:
      - "@Server"
      - "NetworkManager"
      - "NetworkManager-cloud-setup"
      - "WALinuxAgent"
      - "bzip2"
      - "cloud-init"
      - "cloud-utils-growpart"
      - "cryptsetup-reencrypt"
      - "dracut-config-generic"
      - "dracut-norescue"
      - "efibootmgr"
      - "gdisk"
      - "hyperv-daemons"
      - "kernel"
      - "kernel-core"
      - "kernel-modules"
      - "langpacks-en"
      - "lvm2"
      - "nvme-cli"
      - "patch"
      - "rng-tools"
      - "selinux-policy-targeted"
      - "uuid"
      - "yum-utils"
    exclude:
      - "NetworkManager-config-server"
      - "aic94xx-firmware"
      - "alsa-firmware"
      - "alsa-sof-firmware"
      - "alsa-tools-firmware"
      - "biosdevname"
      - "bolt"
      - "buildah"
      - "cockpit-podman"
      - "containernetworking-plugins"
      - "dnf-plugin-spacewalk"
      - "dracut-config-rescue"
      - "glibc-all-langpacks"
      - "iprutils"
      - "ivtv-firmware"
      - "iwl100-firmware"
      - "iwl1000-firmware"
      - "iwl105-firmware"
      - "iwl135-firmware"
      - "iwl2000-firmware"
      - "iwl2030-firmware"
      - "iwl3160-firmware"
      - "iwl3945-firmware"
      - "iwl4965-firmware"
      - "iwl5000-firmware"
      - "iwl5150-firmware"
      - "iwl6000-firmware"
      - "iwl6000g2a-firmware"
      - "iwl6000g2b-firmware"
      - "iwl6050-firmware"
      - "iwl7260-firmware"
      - "libertas-sd8686-firmware"
      - "libertas-sd8787-firmware"
      - "libertas-usb8388-firmware"
      - "plymouth"
      - "podman"
      - "python3-dnf-plugin-spacewalk"
      - "python3-hwdata"
      - "python3-rhnlib"
      - "rhn-check"
      - "rhn-client-tools"
      - "rhn-setup"
      - "rhnlib"
      - "rhnsd"
      - "usb_modeswitch"
    conditions:
      <<: *conditions_for_insights_client
      # XXX: the below "rhc" is defined in
      # azure.go:commonPackageSets but there is a bug in the
      # original code so this never gets actually added so we
      # don't add it here either
      # - "rhc"

  # Default AMI (custom image built by users) images config.
  # The configuration does not touch the RHSM configuration at all.
  # https://issues.redhat.com/browse/COMPOSER-2157
  ami_image_config: &ami_image_config
    timezone: "UTC"
    time_synchronization:
      servers:
        - hostname: "169.254.169.123"
          prefer: true
          iburst: true
          minpoll: 4
          maxpoll: 4
      # empty string will remove any occurrences of the option
      # from the configuration
      leapsectz: ""
    keyboard:
      keymap: "us"
      "x11-keymap":
        layouts: ["us"]
    enabled_services:
      - "sshd"
      - "NetworkManager"
      - "nm-cloud-setup.service"
      - "nm-cloud-setup.timer"
      - "cloud-init"
      - "cloud-init-local"
      - "cloud-config"
      - "cloud-final"
      - "reboot.target"
    default_target: "multi-user.target"
    update_default_kernel: true
    default_kernel: "kernel"
    sysconfig:
      networking: true
      no_zero_conf: true
      create_default_network_scripts: true
    dracut_conf:
      - &sgdisk_dracut_conf
        filename: "sgdisk.conf"
        config:
          install: ["sgdisk"]
    systemd_logind:
      - filename: "00-getty-fixes.conf"
        config:
          login:
            nautovts: 0
    cloud_init:
      - filename: "00-rhel-default-user.cfg"
        config:
          system_info:
            default_user:
              name: "ec2-user"
    modprobe:
      - filename: "blacklist-nouveau.conf"
        commands:
          - command: blacklist
            modulename: "nouveau"
      - filename: "blacklist-amdgpu.conf"
        commands:
          - command: blacklist
            modulename: "amdgpu"
    systemd_dropin:
      # RHBZ#1822863
      - unit: "nm-cloud-setup.service"
        dropin: "10-rh-enable-for-ec2.conf"
        config:
          service:
            environment:
              - key: "NM_CLOUD_SETUP_EC2"
                value: "yes"
    authselect:
      profile: "sssd"
    sshd_config:
      config:
        PasswordAuthentication: false
    conditions: &conditions_ami_image_config
      "x86_64 specific dracut conf":
        when:
          arch: "x86_64"
        shallow_merge: &ami_image_config_cond_x86_64
          dracut_conf:
            - *sgdisk_dracut_conf
            - filename: "ec2.conf"
              config:
                add_drivers:
                  - "nvme"
                  - "xen-blkfront"
      "x86_64 specific kopts":
        when:
          arch: "x86_64"
        shallow_merge:
          # TODO: move these to the EC2 environment?
          kernel_options:
            - "console=tty0"
            - "console=ttyS0,115200n8"
            - "net.ifnames=0"
            - "rd.blacklist=nouveau"
            - "nvme_core.io_timeout=4294967295"
            - "crashkernel=auto"
      "aarch64 specific kopts":
        when:
          arch: "aarch64"
        shallow_merge:
          # TODO: move these to the EC2 environment?
          kernel_options:
            # XXX: duplicated with above x86_64 kernel defaults
            - "console=tty0"
            - "console=ttyS0,115200n8"
            - "net.ifnames=0"
            - "rd.blacklist=nouveau"
            - "nvme_core.io_timeout=4294967295"
            # this is the only difference
            - "iommu.strict=0"
            # same again
            - "crashkernel=auto"

  ec2_image_config: &ec2_image_config
    <<: *ami_image_config
    conditions: &conditions_ec2_image_config
      <<: *conditions_ami_image_config
      "no rhsm for rhel-8.7+":
        # The RHSM configuration should not be applied since 8.7, but it is instead done by installing the
        # redhat-cloud-client-configuration package. See COMPOSER-1804 for more information.
        when:
          version_less_than: "8.7"
        shallow_merge:
          rhsm_config:
            "no-subscription":
              # RHBZ#1932802
              subman:
                rhsmcertd:
                  # RHBZ#1932802
                  auto_registration: true
                  # Don't disable RHSM redhat.repo management on the AMI
                  # image, which is BYOS and does not use RHUI for content.
                  # Otherwise subscribing the system manually after booting
                  # it would result in empty redhat.repo. Without RHUI, such
                  # system would have no way to get Red Hat content, but
                  # enable the repo management manually, which would be very
                  # confusing.
                  #
                  # XXX: the above is the orginal comment from the go code,
                  # however at a different place it will do the setting below
                  # which seem to contradict the previous comment.
                rhsm:
                  # Disable RHSM redhat.repo management
                  manage_repos: false
            "with-subscription":
              # RHBZ#1932802
              subman:
                rhsmcertd:
                  auto_registration: true
                  # do not disable the redhat.repo management if the user
                  # explicitly request the system to be subscribed

  sap_image_config: &sap_image_config
    selinux_config:
      state: "permissive"
    tuned:
      profiles: ["sap-hana"]
    # RHBZ#1959979
    tmpfilesd:
      - filename: "sap.conf"
        config:
          - type: "x"
            path: "/tmp/.sap*"
          - type: "x"
            path: "/tmp/.hdb*lock"
          - type: "x"
            path: "/tmp/.trex*lock"
    # RHBZ#1959963
    pam_limits_conf:
      - filename: "99-sap.conf"
        config:
          - domain: "@sapsys"
            type: "hard"
            item: "nofile"
            value: 1048576
          - domain: "@sapsys"
            type: "soft"
            item: "nofile"
            value: 1048576
          - domain: "@dba"
            type: "hard"
            item: "nofile"
            value: 1048576
          - domain: "@dba"
            type: "soft"
            item: "nofile"
            value: 1048576
          - domain: "@sapsys"
            type: "hard"
            item: "nproc"
            value: "unlimited"
          - domain: "@sapsys"
            type: "soft"
            item: "nproc"
            value: "unlimited"
          - domain: "@dba"
            type: "hard"
            item: "nproc"
            value: "unlimited"
          - domain: "@dba"
            type: "soft"
            item: "nproc"
            value: "unlimited"
    # RHBZ#1959962
    sysctld:
      - filename: "sap.conf"
        config:
          - key: "kernel.pid_max"
            value: "4194304"
          - key: "vm.max_map_count"
            value: "2147483647"
    dnf_config:
      set_release_ver_var: false
    conditions: &conditions_sap_image_config
      "rhel-8.9 and below needs to set the release ver in dnf config":
        when:
          version_less_than: "8.10"
        shallow_merge:
          dnf_config:
            # E4S/EUS
            set_release_ver_var: true

  sap_pkgset: &sap_pkgset
    include:
      # RHBZ#2074107
      - "@Server"
      # SAP System Roles
      # https://access.redhat.com/sites/default/files/attachments/rhel_system_roles_for_sap_1.pdf
      - "rhel-system-roles-sap"
      # RHBZ#1959813
      - "bind-utils"
      - "compat-sap-c++-9"
      # RHBZ#2074114
      - "compat-sap-c++-10"
      - "nfs-utils"
      - "tcsh"
      # RHBZ#1959955
      - "uuidd"
      # RHBZ#1959923
      - "cairo"
      - "expect"
      - "graphviz"
      - "gtk2"
      - "iptraf-ng"
      - "krb5-workstation"
      - "libaio"
      - "libatomic"
      - "libcanberra-gtk2"
      - "libicu"
      - "libpng12"
      - "libtool-ltdl"
      - "lm_sensors"
      - "net-tools"
      - "numactl"
      - "PackageKit-gtk3-module"
      - "xorg-x11-xauth"
      # RHBZ#1960617
      - "tuned-profiles-sap-hana"
      # RHBZ#1961168
      - "libnsl"
    conditions:
      "name of the ansible pkg rhel-8.6 and below":
        when:
          version_less_than: "8.6"
        append:
          include:
            - "ansible"
      "name of the ansible pkg rhel-8.6+":
        when:
          version_greater_or_equal: "8.6"
        append:
          include:
            - "ansible-core"

  installer_pkgset: &installer_pkgset
    include:
      - "anaconda-dracut"
      - "curl"
      - "dracut-config-generic"
      - "dracut-network"
      - "hostname"
      - "iwl100-firmware"
      - "iwl1000-firmware"
      - "iwl105-firmware"
      - "iwl135-firmware"
      - "iwl2000-firmware"
      - "iwl2030-firmware"
      - "iwl3160-firmware"
      - "iwl5000-firmware"
      - "iwl5150-firmware"
      - "iwl6000-firmware"
      - "iwl6050-firmware"
      - "iwl7260-firmware"
      - "kernel"
      - "less"
      - "nfs-utils"
      - "openssh-clients"
      - "ostree"
      - "plymouth"
      - "prefixdevname"
      - "rng-tools"
      - "rpcbind"
      - "selinux-policy-targeted"
      - "systemd"
      - "tar"
      - "xfsprogs"
      - "xz"
    conditions:
      "x86-64 needs biosdevname":
        when:
          arch: "x86_64"
        append:
          include:
            - "biosdevname"

  anaconda_boot_pkgset: &anaconda_boot_pkgset
    conditions:
      "x86_64 architecture dependant anaconda packages":
        when:
          arch: "x86_64"
        append:
          include:
            # eficommon
            - "efibootmgr"
            # XXX: de-dup?
            # grub-common
            - "grub2-tools"
            - "grub2-tools-extra"
            - "grub2-tools-minimal"
            # arch specific
            - "grub2-efi-ia32-cdboot"
            - "grub2-efi-x64"
            - "grub2-efi-x64-cdboot"
            - "grub2-pc"
            - "grub2-pc-modules"
            - "shim-ia32"
            - "shim-x64"
            - "syslinux"
            - "syslinux-nonlinux"
      "aarch64 architecture dependant anaconda packages":
        when:
          arch: "aarch64"
        append:
          include:
            # eficommon
            - "efibootmgr"
            # XXX: de-dup?
            # grub-common
            - "grub2-tools"
            - "grub2-tools-extra"
            - "grub2-tools-minimal"
            # arch specific
            - "grub2-efi-aa64-cdboot"
            - "grub2-efi-aa64"
            - "shim-aa64"

  anaconda_pkgset: &anaconda_pkgset
    include:
      - "aajohan-comfortaa-fonts"
      - "abattis-cantarell-fonts"
      - "alsa-firmware"
      - "alsa-tools-firmware"
      - "anaconda"
      - "anaconda-install-env-deps"
      - "anaconda-widgets"
      - "audit"
      - "bind-utils"
      - "bitmap-fangsongti-fonts"
      - "bzip2"
      - "cryptsetup"
      - "dbus-x11"
      - "dejavu-sans-fonts"
      - "dejavu-sans-mono-fonts"
      - "device-mapper-persistent-data"
      - "dnf"
      - "dump"
      - "ethtool"
      - "fcoe-utils"
      - "ftp"
      - "gdb-gdbserver"
      - "gdisk"
      - "gfs2-utils"
      - "glibc-all-langpacks"
      - "google-noto-sans-cjk-ttc-fonts"
      - "gsettings-desktop-schemas"
      - "hdparm"
      - "hexedit"
      - "initscripts"
      - "ipmitool"
      - "iwl3945-firmware"
      - "iwl4965-firmware"
      - "iwl6000g2a-firmware"
      - "iwl6000g2b-firmware"
      - "jomolhari-fonts"
      - "kacst-farsi-fonts"
      - "kacst-qurn-fonts"
      - "kbd"
      - "kbd-misc"
      - "kdump-anaconda-addon"
      - "khmeros-base-fonts"
      - "libblockdev-lvm-dbus"
      - "libertas-sd8686-firmware"
      - "libertas-sd8787-firmware"
      - "libertas-usb8388-firmware"
      - "libertas-usb8388-olpc-firmware"
      - "libibverbs"
      - "libreport-plugin-bugzilla"
      - "libreport-plugin-reportuploader"
      - "librsvg2"
      - "linux-firmware"
      - "lklug-fonts"
      - "lldpad"
      - "lohit-assamese-fonts"
      - "lohit-bengali-fonts"
      - "lohit-devanagari-fonts"
      - "lohit-gujarati-fonts"
      - "lohit-gurmukhi-fonts"
      - "lohit-kannada-fonts"
      - "lohit-odia-fonts"
      - "lohit-tamil-fonts"
      - "lohit-telugu-fonts"
      - "lsof"
      - "madan-fonts"
      - "metacity"
      - "mtr"
      - "mt-st"
      - "net-tools"
      - "nmap-ncat"
      - "nm-connection-editor"
      - "nss-tools"
      - "openssh-server"
      - "oscap-anaconda-addon"
      - "pciutils"
      - "perl-interpreter"
      - "pigz"
      - "python3-pyatspi"
      - "rdma-core"
      - "redhat-release-eula"
      - "rpm-ostree"
      - "rsync"
      - "rsyslog"
      - "sg3_utils"
      - "sil-abyssinica-fonts"
      - "sil-padauk-fonts"
      - "sil-scheherazade-fonts"
      - "smartmontools"
      - "smc-meera-fonts"
      - "spice-vdagent"
      - "strace"
      - "system-storage-manager"
      - "thai-scalable-waree-fonts"
      - "tigervnc-server-minimal"
      - "tigervnc-server-module"
      - "udisks2"
      - "udisks2-iscsi"
      - "usbutils"
      - "vim-minimal"
      - "volume_key"
      - "wget"
      - "xfsdump"
      - "xorg-x11-drivers"
      - "xorg-x11-fonts-misc"
      - "xorg-x11-server-utils"
      - "xorg-x11-server-Xorg"
      - "xorg-x11-xauth"
      # XXX: this was originally centos or rhel
      - "libreport-rhel-anaconda-bugzilla"
    conditions:
      "x86_64 architecture dependant packages for anaconda":
        when:
          arch: "x86_64"
        append:
          include:
            - "biosdevname"
            - "dmidecode"
            - "memtest86+"
      "aarch64 architecture dependant packages for anaconda":
        when:
          arch: "aarch64"
        append:
          include:
            - "dmidecode"

  gce_common_pkgset: &gce_common_pkgset
    include:
      - "@core"
      - "langpacks-en"  # not in Google's KS
      - "acpid"
      - "dhcp-client"
      - "dnf-automatic"
      - "net-tools"
      #  - "openssh-server" included in core
      - "python3"
      - "rng-tools"
      - "tar"
      - "vim"
      # GCE guest tools
      - "google-compute-engine"
      - "google-osconfig-agent"
      - "gce-disk-expand"
      # Not explicitly included in GCP kickstart, but present on the image
      # for time synchronization
      - "chrony"
      - "timedatex"
      # EFI
      - "grub2-tools-efi"
    exclude:
      - "alsa-utils"
      - "b43-fwcutter"
      - "dmraid"
      - "eject"
      - "gpm"
      - "irqbalance"
      - "microcode_ctl"
      - "smartmontools"
      - "aic94xx-firmware"
      - "atmel-firmware"
      - "b43-openfwwf"
      - "bfa-firmware"
      - "ipw2100-firmware"
      - "ipw2200-firmware"
      - "ivtv-firmware"
      - "iwl100-firmware"
      - "iwl1000-firmware"
      - "iwl3945-firmware"
      - "iwl4965-firmware"
      - "iwl5000-firmware"
      - "iwl5150-firmware"
      - "iwl6000-firmware"
      - "iwl6000g2a-firmware"
      - "iwl6050-firmware"
      - "kernel-firmware"
      - "libertas-usb8388-firmware"
      - "ql2100-firmware"
      - "ql2200-firmware"
      - "ql23xx-firmware"
      - "ql2400-firmware"
      - "ql2500-firmware"
      - "rt61pci-firmware"
      - "rt73usb-firmware"
      - "xorg-x11-drv-ati-firmware"
      - "zd1211-firmware"
      # RHBZ#2075815
      - "qemu-guest-agent"
    conditions:
      <<: *conditions_for_insights_client

  qcow2_common_pkgset: &qcow2_common_pkgset
    include:
      - "@core"
      - "authselect-compat"
      - "chrony"
      - "cloud-init"
      - "cloud-utils-growpart"
      - "cockpit-system"
      - "cockpit-ws"
      - "dhcp-client"
      - "dnf"
      - "dnf-utils"
      - "dosfstools"
      - "dracut-norescue"
      - "net-tools"
      - "NetworkManager"
      - "nfs-utils"
      - "oddjob"
      - "oddjob-mkhomedir"
      - "psmisc"
      - "python3-jsonschema"
      - "qemu-guest-agent"
      - "redhat-release"
      - "redhat-release-eula"
      - "rsync"
      - "tar"
      - "tcpdump"
      - "yum"
    exclude:
      - "aic94xx-firmware"
      - "alsa-firmware"
      - "alsa-lib"
      - "alsa-tools-firmware"
      - "biosdevname"
      - "dnf-plugin-spacewalk"
      - "dracut-config-rescue"
      - "fedora-release"
      - "fedora-repos"
      - "firewalld"
      - "fwupd"
      - "iprutils"
      - "ivtv-firmware"
      - "iwl1000-firmware"
      - "iwl100-firmware"
      - "iwl105-firmware"
      - "iwl135-firmware"
      - "iwl2000-firmware"
      - "iwl2030-firmware"
      - "iwl3160-firmware"
      - "iwl3945-firmware"
      - "iwl4965-firmware"
      - "iwl5000-firmware"
      - "iwl5150-firmware"
      - "iwl6000-firmware"
      - "iwl6000g2a-firmware"
      - "iwl6000g2b-firmware"
      - "iwl6050-firmware"
      - "iwl7260-firmware"
      - "langpacks-*"
      - "langpacks-en"
      - "langpacks-en"
      - "libertas-sd8686-firmware"
      - "libertas-sd8787-firmware"
      - "libertas-usb8388-firmware"
      - "nss"
      - "plymouth"
      - "rng-tools"
      - "udisks2"
    conditions: &condition_rhel_insights_clinet_subman
      "add insights/subscription manager for copilot":
        when:
          distro_name: "rhel"
        append:
          include:
            - "insights-client"
            - "subscription-manager-cockpit"

  partitioning:
    ids:
      - &prep_partition_dosid "41"
      - &filesystem_linux_dosid "83"
      - &fat16_bdosid "06"
    guids:
      - &bios_boot_partition_guid "21686148-6449-6E6F-744E-656564454649"
      - &efi_system_partition_guid "C12A7328-F81F-11D2-BA4B-00A0C93EC93B"
      - &filesystem_data_guid "0FC63DAF-8483-4772-8E79-3D69D8477DE4"
      - &xboot_ldr_partition_guid "BC13C2FF-59E6-4262-A352-B275FD6F7172"
      - &lvm_partition_guid "E6D6D379-F507-44C2-A23C-238F2A3DF928"
    # static UUIDs for partitions and filesystems
    # NOTE(akoutsou): These are unnecessary and have stuck around since the
    # beginning where (I believe) the goal was to have predictable,
    # reproducible partition tables. They might be removed soon in favour of
    # proper, random UUIDs, with reproducibility being controlled by fixing
    # rng seeds.
    uuids:
      - &bios_boot_partition_uuid "FAC7F1FB-3E8D-4137-A512-961DE09A5549"
      - &root_partition_uuid "6264D520-3FB9-423F-8AB8-7A0A8E3D3562"
      - &data_partition_uuid "CB07C243-BC44-4717-853E-28852021225B"
      - &efi_system_partition_uuid "68B2905B-DF3E-4FB3-80FA-49D1E773AA33"
      - &efi_filesystem_uuid "7B77-95E7"

    partitions:
      - &default_partition_table_part_bios
        size: "1 MiB"
        bootable: true
        type: *bios_boot_partition_guid
        uuid: *bios_boot_partition_uuid
      - &default_partition_table_part_efi
        size: "100 MiB"
        type: *efi_system_partition_guid
        uuid: *efi_system_partition_uuid
        payload_type: "filesystem"
        payload:
          type: vfat
          uuid: *efi_filesystem_uuid
          mountpoint: "/boot/efi"
          label: "ESP"
          fstab_options: "defaults,uid=0,gid=0,umask=077,shortname=winnt"
          fstab_freq: 0
          fstab_passno: 2
      - &default_partition_table_part_root
        size: "2 GiB"
        type: *filesystem_data_guid
        uuid: *root_partition_uuid
        payload_type: "filesystem"
        payload: &default_partition_table_part_root_payload
          type: "xfs"
          label: "root"
          mountpoint: "/"
          fstab_options: "defaults"
          fstab_freq: 0
          fstab_passno: 0
      # ec2
      - &ec2_partition_table_part_boot
        size: "1 GiB"
        type: *filesystem_data_guid
        uuid: *data_partition_uuid
        payload_type: "filesystem"
        payload:
          type: "xfs"
          mountpoint: "/boot"
          fstab_options: "defaults"
          fstab_freq: 0
          fstab_passno: 0
      - &ec2_partition_table_part_boot512
        <<: *ec2_partition_table_part_boot
        size: "512 MiB"

    default_partition_tables: &default_partition_tables
      x86_64:
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - *default_partition_table_part_bios
          - *default_partition_table_part_efi
          - *default_partition_table_part_root
      aarch64: &default_partition_table_aarch64
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - *default_partition_table_part_efi
          - *default_partition_table_part_root
      ppc64le:
        uuid: "0x14fc63d2"
        type: "dos"
        partitions:
          - size: "4 MiB"
            bootable: true
            type: *prep_partition_dosid
          - &default_partition_table_part_root_ppc64le
            size: "2 GiB"
            payload_type: "filesystem"
            payload:
              <<: *default_partition_table_part_root_payload
              label: ""
      s390x:
        uuid: "0x14fc63d2"
        type: "dos"
        partitions:
          - <<: *default_partition_table_part_root_ppc64le
            bootable: true

    edge_base_partition_tables: &edge_base_partition_tables
      x86_64:
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - *default_partition_table_part_bios
          - &edge_base_partition_table_part_efi
            size: "127 MiB"
            type: *efi_system_partition_guid
            uuid: *efi_system_partition_uuid
            payload_type: "filesystem"
            payload:
              type: vfat
              uuid: *efi_filesystem_uuid
              mountpoint: "/boot/efi"
              label: "ESP"
              fstab_options: "defaults,uid=0,gid=0,umask=077,shortname=winnt"
              fstab_freq: 0
              fstab_passno: 2
          - &edge_base_partition_table_part_boot
            size: "384 MiB"
            type: *filesystem_data_guid
            uuid: *data_partition_uuid
            payload_type: "filesystem"
            payload:
              type: "xfs"
              mountpoint: "/boot"
              label: "boot"
              fstab_options: "defaults"
              fstab_freq: 1
              fstab_passno: 1
          - &edge_base_partition_table_part_root
            size: "2 GiB"
            type: *filesystem_data_guid
            uuid: *root_partition_uuid
            payload_type: "luks"
            payload:
              label: "crypt_root"
              cipher: "cipher_null"
              passphrase: "osbuild"
              pbkdf:
                memory: 32
                iterations: 4
                parallelism: 1
              clevis:
                pin: "null"
                policy: "{}"
                remove_passphrase: true
              payload_type: "filesystem"
              payload:
                type: "xfs"
                label: "root"
                mountpoint: "/"
                fstab_options: "defaults"
                fstab_freq: 0
                fstab_passno: 0
      aarch64: &edge_base_partition_table_aarch64
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - <<: *edge_base_partition_table_part_efi
            type: *efi_system_partition_guid
            uuid: *efi_system_partition_uuid
          - *edge_base_partition_table_part_boot
          - *edge_base_partition_table_part_root

    ec2_partition_tables: &ec2_partition_tables
      x86_64: &ec2_partition_table_x86_64
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - *default_partition_table_part_bios
          - &ec2_partition_table_part_efi
            size: "200 MiB"
            type: *efi_system_partition_guid
            uuid: *efi_system_partition_uuid
            payload_type: "filesystem"
            payload:
              type: vfat
              uuid: *efi_filesystem_uuid
              mountpoint: "/boot/efi"
              label: "ESP"
              fstab_options: "defaults,uid=0,gid=0,umask=077,shortname=winnt"
              fstab_freq: 0
              fstab_passno: 2
          - &ec2_partition_table_part_root
            size: "2 GiB"
            type: *filesystem_data_guid
            uuid: *root_partition_uuid
            payload_type: "filesystem"
            payload:
              type: "xfs"
              label: "root"
              mountpoint: "/"
              fstab_options: "defaults"
              fstab_freq: 0
              fstab_passno: 0
      aarch64: &ec2_partition_table_aarch64
        uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
        type: "gpt"
        partitions:
          - *ec2_partition_table_part_efi
          - *ec2_partition_table_part_boot
          - *ec2_partition_table_part_root

  ec2_partition_tables_override: &ec2_partition_tables_override
    conditions:
      "rhel8.9  uses efi boot but small boot":
        when:
          version_equal: "8.9"
        override:
          x86_64:
            <<: *ec2_partition_table_x86_64
          aarch64: &ec2_partition_table_aarch64_8_9
            <<: *ec2_partition_table_aarch64
            partitions:
              - *ec2_partition_table_part_efi
              - *ec2_partition_table_part_boot512
              - *ec2_partition_table_part_root
      "rhel-8.9 and below has no efi on x86 but is the same on aarch64":
        when:
          version_less_than: "8.9"
        override:
          x86_64:
            <<: *ec2_partition_table_x86_64
            partitions:
              - *default_partition_table_part_bios
              - *ec2_partition_table_part_root
          aarch64:
            <<: *ec2_partition_table_aarch64_8_9

  azure_rhui_partition_tables: &azure_rhui_partition_tables
    x86_64:
      uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
      type: "gpt"
      size: "64 GiB"
      partitions:
        - &azure_rhui_part_boot_efi
          size: 524_288_000   # 500 * datasizes.MebiByte
          type: *efi_system_partition_guid
          UUID: *efi_system_partition_uuid
          payload_type: "filesystem"
          payload:
            type: "vfat"
            uuid: *efi_filesystem_uuid
            mountpoint: "/boot/efi"
            fstab_options: "defaults,uid=0,gid=0,umask=077,shortname=winnt"
            fstab_freq: 0
            fstab_passno: 2
        - &azure_rhui_part_boot
          size: 524_288_000   # 500 * datasizes.MebiByte
          type: *filesystem_data_guid
          uuid: *data_partition_uuid
          payload_type: "filesystem"
          payload:
            type: "xfs"
            mountpoint: "/boot"
            fstab_options: "defaults"
            fstab_freq: 0
            fstab_passno: 0
        - size: 2_097_152  # 2 * datasizes.MebiByte
          bootable: true
          type: *bios_boot_partition_guid
          uuid: *bios_boot_partition_uuid
        - &azure_rhui_part_lvm
          type: *lvm_partition_guid
          uuid: *root_partition_uuid
          payload_type: "lvm"
          payload:
            name: "rootvg"
            description: "built with lvm2 and osbuild"
            logical_volumes:
              - size: 1_073_741_824  # 1 * datasizes.GibiByte
                name: "homelv"
                payload_type: "filesystem"
                payload:
                  type: "xfs"
                  label: "home"
                  mountpoint: "/home"
                  fstab_options: "defaults"
              - size: 2_147_483_648  # 2 * datasizes.GibiByte
                name: "rootlv"
                payload_type: "filesystem"
                payload:
                  type: "xfs"
                  label: "root"
                  mountpoint: "/"
                  fstab_options: "defaults"
              - size: 2_147_483_648  # 2 * datasizes.GibiByte
                name: "tmplv"
                payload_type: "filesystem"
                payload:
                  type: "xfs"
                  label: "tmp"
                  mountpoint: "/tmp"
                  fstab_options: "defaults"
              - size: 10_737_418_240  # 10 * datasizes.GibiByte
                name: "usrlv"
                payload_type: "filesystem"
                payload:
                  type: "xfs"
                  label: "usr"
                  mountpoint: "/usr"
                  fstab_options: "defaults"
              - size: 10_737_418_240  # 10 * datasizes.GibiByte
                name: "varlv"
                payload_type: "filesystem"
                payload:
                  type: "xfs"
                  label: "var"
                  mountpoint: "/var"
                  fstab_options: "defaults"
    aarch64:
      uuid: "D209C89E-EA5E-4FBD-B161-B461CCE297E0"
      type: "gpt"
      size: 68_719_476_736  # 64 * datasizes.GibiByte
      partitions:
        - *azure_rhui_part_boot_efi
        # NB: we currently don't support /boot on LVM
        - *azure_rhui_part_boot
        - *azure_rhui_part_lvm

image_config:
  default:
    default_kernel: "kernel"
    default_oscap_datastream: "/usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml"
    install_weak_deps: true
    kernel_options_bootloader: true
    locale: "en_US.UTF-8"
    sysconfig:
      networking: true
      no_zero_conf: true
    timezone: "America/New_York"
    update_default_kernel: true
  conditions:
    "centos has a different oscap path":
      when:
        distro_name: "centos"
      shallow_merge:
        default_oscap_datastream: "/usr/share/xml/scap/ssg/content/ssg-centos8-ds.xml"

image_types:
  # XXX: not a real pkgset but the "os" pipeline pkgset for image-installer
  # find a nicer way to represent this
  bare_metal:
    package_sets: &bare_metal_pkgset
      os:
        - include:
            - "@core"
            - "authselect-compat"
            - "chrony"
            - "cockpit-system"
            - "cockpit-ws"
            - "dhcp-client"
            - "dnf"
            - "dnf-utils"
            - "dosfstools"
            - "dracut-norescue"
            - "iwl1000-firmware"
            - "iwl100-firmware"
            - "iwl105-firmware"
            - "iwl135-firmware"
            - "iwl2000-firmware"
            - "iwl2030-firmware"
            - "iwl3160-firmware"
            - "iwl3945-firmware"
            - "iwl4965-firmware"
            - "iwl5000-firmware"
            - "iwl5150-firmware"
            - "iwl6000-firmware"
            - "iwl6000g2a-firmware"
            - "iwl6000g2b-firmware"
            - "iwl6050-firmware"
            - "iwl7260-firmware"
            - "lvm2"
            - "net-tools"
            - "NetworkManager"
            - "nfs-utils"
            - "oddjob"
            - "oddjob-mkhomedir"
            - "policycoreutils"
            - "psmisc"
            - "python3-jsonschema"
            - "qemu-guest-agent"
            - "redhat-release"
            - "redhat-release-eula"
            - "rsync"
            - "selinux-policy-targeted"
            - "tar"
            - "tcpdump"
            - "yum"
          conditions:
            <<: *condition_rhel_insights_clinet_subman

  ami: &ami
    package_sets:
      os:
        - *ec2_common_pkgset
    partition_table:
      <<: *ec2_partition_tables
    partition_tables_override:
      <<: *ec2_partition_tables_override
    image_config: *ami_image_config

  ec2: &ec2
    <<: *ami
    image_config:
      <<: *ec2_image_config
    package_sets:
      os:
        - *ec2_common_pkgset
        - include:
            - "rh-amazon-rhui-client"
          exclude:
            - "alsa-lib"
          conditions: &conditions_rh_cloud_client
            "add redhat-cloud-client-configuration on rh8.7+":
              when:
                version_greater_or_equal: "8.7"
              append:
                include:
                  - "redhat-cloud-client-configuration"

  "ec2-ha":
    <<: *ec2
    package_sets:
      os:
        - *ec2_common_pkgset
        - include:
            - "fence-agents-all"
            - "pacemaker"
            - "pcs"
            - "rh-amazon-rhui-client-ha"
          exclude:
            - "alsa-lib"
          conditions:
            <<: *conditions_rh_cloud_client

  "ec2-sap":
    <<: *ec2
    image_config:
      <<: [*ec2_image_config, *sap_image_config]
      conditions:
        <<: [*conditions_ec2_image_config, *conditions_sap_image_config]
        # override ec2 kopts
        "x86_64 specific kopts":
          when:
            arch: "x86_64"
          shallow_merge:
            kernel_options:
              # amiSapKernelOptions()
              # common AMI kernel options
              - "console=tty0"
              - "console=ttyS0,115200n8"
              - "net.ifnames=0"
              - "rd.blacklist=nouveau"
              - "nvme_core.io_timeout=4294967295"
              - "crashkernel=auto"
              # SAP specific for ami
              - "processor.max_cstate=1"
              - "intel_idle.max_cstate=1"
    package_sets:
      os:
        - *ec2_common_pkgset
        - *sap_pkgset
        - conditions:
            <<: *conditions_rh_cloud_client
            "rh-8.9 or below gets the e4s bundle":
              when:
                version_less_than: "8.10"
              append:
                include:
                  - "rh-amazon-rhui-client-sap-bundle-e4s"
            "rh-8.10+ get the rhui bundle":
              when:
                version_greater_or_equal: "8.10"
              append:
                include:
                  - "rh-amazon-rhui-client-sap-bundle"

  qcow2: &qcow2
    image_config:
      default_target: "multi-user.target"
      kernel_options:
        - "console=tty0"
        - "console=ttyS0,115200n8"
        - "no_timer_check"
        - "net.ifnames=0"
        - "crashkernel=auto"
      conditions:
        "tweak the rhsm config on rhel":
          when:
            distro_name: "rhel"
          shallow_merge:
            rhsm_config:
              "no-subscription":
                dnf_plugin:
                  product_id:
                    enabled: false
                  subscription_manager:
                    enabled: false
    partition_table:
      <<: *default_partition_tables
    package_sets: &qcow2_pkgset
      os:
        - *qcow2_common_pkgset

  vhd:
    # yamllint disable rule:line-length
    # based on https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/deploying_rhel_8_on_microsoft_azure/assembly_deploying-a-rhel-image-as-a-virtual-machine-on-microsoft-azure_cloud-content-azure#making-configuration-changes_configure-the-image-azure
    # yamllint enable rule:line-length
    image_config: &vhd_image_config
      timezone: "Etc/UTC"
      locale: "en_US.UTF-8"
      keyboard:
        keymap: "us"
        "x11-keymap":
          layouts: ["us"]
      update_default_kernel: true
      default_kernel: "kernel-core"
      sysconfig:
        networking: true
        no_zero_conf: true
      enabled_services:
        - "nm-cloud-setup.service"
        - "nm-cloud-setup.timer"
        - "sshd"
        - "waagent"
        - "firewalld"
      sshd_config:
        config:
          ClientAliveInterval: 180
      modprobe:
        - filename: "blacklist-amdgpu.conf"
          commands:
            - command: blacklist
              modulename: "amdgpu"
        - filename: "blacklist-intel-cstate.conf"
          commands:
            - command: blacklist
              modulename: "intel_cstate"
        - filename: "blacklist-floppy.conf"
          commands:
            - command: blacklist
              modulename: "floppy"
        - filename: "blacklist-nouveau.conf"
          commands:
            - command: blacklist
              modulename: "nouveau"
            - command: blacklist
              modulename: "lbm-nouveau"
        - filename: "blacklist-skylake-edac.conf"
          commands:
            - command: blacklist
              modulename: "skx_edac"
      cloud_init:
        - filename: "10-azure-kvp.cfg"
          config:
            reporting:
              logging:
                type: "log"
              telemetry:
                type: "hyperv"
        - filename: "91-azure_datasource.cfg"
          config:
            datasource:
              azure:
                apply_network_config: false
            datasource_list:
              - "Azure"
      pwquality:
        config:
          minlen: 6
          minclass: 3
          dcredit: 0
          ucredit: 0
          lcredit: 0
          ocredit: 0
      waagent_config:
        config:
          "ResourceDisk.Format": false
          "ResourceDisk.EnableSwap": false
      grub2_config:
        disable_recovery: true
        disable_submenu: true
        distributor: "$(sed 's, release .*$,,g' /etc/system-release)"
        terminal: ["serial", "console"]
        serial: "serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1"
        timeout: 10
        timeout_style: "countdown"
      udev_rules:
        filename: "/etc/udev/rules.d/68-azure-sriov-nm-unmanaged.rules"
        rules:
          - comment:
              - "Accelerated Networking on Azure exposes a new SRIOV interface to the VM."
              - "This interface is transparently bonded to the synthetic interface,"
              - "so NetworkManager should just ignore any SRIOV interfaces."
          - rule:
              - K: "SUBSYSTEM"
                O: "=="
                V: "net"
              - K: "DRIVERS"
                O: "=="
                V: "hv_pci"
              - K: "ACTION"
                O: "=="
                V: "add"
              - K: "ENV"
                A: "NM_UNMANAGED"
                O: "="
                V: "1"
      systemd_dropin:
        # RHBZ#1822863
        - unit: "nm-cloud-setup.service"
          dropin: "10-rh-enable-for-azure.conf"
          config:
            service:
              environment:
                - key: "NM_CLOUD_SETUP_AZURE"
                  value: "yes"
      default_target: "multi-user.target"
      kernel_options: &vhd_image_config_kernel_options
        - "ro"
        # use loglevel=3 as described in the RHEL documentation and used in existing RHEL images built by MSFT
        - "loglevel=3"
        - "crashkernel=auto"
        - "console=tty1"
        - "console=ttyS0"
        - "earlyprintk=ttyS0"
        - "rootdelay=300"
      conditions:
        "x86_64 specific kernel options":
          when:
            arch: "x86_64"
          shallow_merge:
            kernel_options: *vhd_image_config_kernel_options
        "rhel needs the rhel release rpm gpg key":
          when:
            distro_name: "rhel"
          shallow_merge:
            gpgkey_files:
              - "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
    partition_table:
      <<: *default_partition_tables
    package_sets:
      os:
        - *azure_common_pkgset
        - &azure_pkgset
          include:
            - "firewalld"
          exclude:
            - "alsa-lib"

  "azure-rhui": &azure_rhui
    image_config: &azure_rhui_image_config
      <<: *vhd_image_config
      rhsm_config:
        "no-subscription":
          dnf_plugin:
            subscription_manager:
              enabled: false
          subman:
            rhsmcertd:
              auto_registration: true
            rhsm:
              manage_repos: false
        "with-subscription":
          subman:
            rhsmcertd:
              auto_registration: true
              # do not disable the redhat.repo management if the user
              # explicitly request the system to be subscribed
      conditions: &conditions_azure_rhui_image_config
        "rhel needs rh and ms gpg keys":
          when:
            distro_name: "rhel"
          shallow_merge:
            gpgkey_files:
              - "/etc/pki/rpm-gpg/RPM-GPG-KEY-microsoft-azure-release"
              - "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
    package_sets:
      os:
        - *azure_common_pkgset
        - include:
            - "firewalld"
            - "rhui-azure-rhel8"
          exclude:
            - "alsa-lib"
    partition_table:
      <<: *azure_rhui_partition_tables

  "azure-sap-rhui":
    <<: *azure_rhui
    image_config:
      <<: [*azure_rhui_image_config, *sap_image_config]
      conditions:
        <<: [*conditions_azure_rhui_image_config, *conditions_sap_image_config]
    package_sets:
      os:
        - *azure_common_pkgset
        - *sap_pkgset
        - include:
            - "firewalld"
          conditions:
            "rh-8.10+ gets the the base sap ha pkgs":
              when:
                version_greater_or_equal: "8.10"
              append:
                include:
                  - "rhui-azure-rhel8-base-sap-ha"
            "rh-8.9 or below gets sap-ha":
              when:
                version_less_than: "8.10"
              append:
                include:
                  - "rhui-azure-rhel8-sap-ha"

  "azure-eap7-rhui":
    <<: *azure_rhui
    image_config:
      <<: *azure_rhui_image_config
      enabled_services:
        # XXX: same as RHUI but no firewalld
        - "nm-cloud-setup.service"
        - "nm-cloud-setup.timer"
        - "sshd"
        - "waagent"
      shell_init:
        - filename: "eap_env.sh"
          variables:
            - key: "EAP_HOME"
              value: "/opt/rh/eap7/root/usr/share/wildfly"
            - key: "JBOSS_HOME"
              value: "/opt/rh/eap7/root/usr/share/wildfly"
    package_sets:
      os:
        - *azure_common_pkgset
        - include:
            - "rhui-azure-rhel8"
          exclude:
            - "firewalld"
        # from the previous eapWorkload() workload, for simplicity
        # this is now a normal packageset
        - include:
            - "java-1.8.0-openjdk"
            - "java-1.8.0-openjdk-devel"
            - "eap7-wildfly"
            - "eap7-artemis-native-wildfly"
          exclude:
            # weak dependencies of the above eapWorkload packages
            # that we don't need (and were not part of the original
            # eapWorkload() package set (as it excluded weak deps)
            - "graphite2"
            - "libXdamage"
            - "libXrandr"
            - "libthai"
            - "libXfixes"
            - "atk"
            - "fribidi"
            - "jbigkit-libs"
            - "hicolor-icon-theme"
            - "libtiff"
            - "gtk2"
            - "harfbuzz"
            - "libXinerama"
            - "libatrie"
            - "libXft"
            - "pango"
            - "gdk-pixbuf2-modules"
            - "libXcursor"
          conditions:
            "rhel-8.8+ needs to exclude libjpeg-turbo as well":
              when:
                version_greater_or_equal: "8.8"
              append:
                exclude:
                  - "libjpeg-turbo"
            "rhel-8.10 must exclude python3-{webencodings,html5lib":
              when:
                version_greater_or_equal: "8.10"
              append:
                exclude:
                  - "python3-webencodings"
                  - "python3-html5lib"

  "image-installer":
    image_config:
      conditions:
        "x86_64 uses syslinux":
          when:
            arch: "x86_64"
          shallow_merge:
            iso_boot_type: "syslinux"
    package_sets:
      <<: *bare_metal_pkgset
      installer:
        - *installer_pkgset
        - *anaconda_pkgset
        - *anaconda_boot_pkgset

  tar:
    filename: "root.tar.xz"
    mime_type: "application/x-tar"
    image_func: "tar"
    build_pipelines: ["build"]
    payload_pipelines: ["os", "archive"]
    exports: ["archive"]
    platforms:
      - arch: "x86_64"
      - arch: "aarch64"
      - arch: "ppc64le"
      - arch: "s390x"
    package_sets:
      os:
        - include:
            - "policycoreutils"
            - "selinux-policy-targeted"
          exclude:
            - "rng-tools"

  "edge-commit": &edge_commit
    image_config: &edge_commit_image_config
      enabled_services: &enabled_services_edge
        - "NetworkManager.service"
        - "firewalld.service"
        - "sshd.service"
        # only on rhel-8.6+ and centos
        - "fdo-client-linuxapp.service"
      dracut_conf:
        - filename: "40-fips.conf"
          config:
            add_dracutmodules: ["fips"]
      conditions:
        "rhel-8.5 has no fdo":
          when:
            version_equal: "8.5"
          shallow_merge:
            enabled_services:
              - "NetworkManager.service"
              - "firewalld.service"
              - "sshd.service"
        "rhel-8.4 and below use greenboot":
          when:
            version_less_than: "8.5"
          shallow_merge:
            enabled_services:
              # same as 8.6
              - "NetworkManager.service"
              - "firewalld.service"
              - "sshd.service"
              # greenboot services aren't enabled by default in 8.4
              - "greenboot-grub2-set-counter"
              - "greenboot-grub2-set-success"
              - "greenboot-healthcheck"
              - "greenboot-rpm-ostree-grub2-check-fallback"
              - "greenboot-status"
              - "greenboot-task-runner"
              - "redboot-auto-reboot"
              - "redboot-task-runner"
    package_sets:
      os:
        - &edge_commit_pkgset
          include:
            - "attr"
            - "audit"
            - "basesystem"
            - "bash"
            - "bash-completion"
            - "chrony"
            - "clevis"
            - "clevis-dracut"
            - "clevis-luks"
            - "container-selinux"
            - "coreutils"
            - "criu"
            - "cryptsetup"
            - "curl"
            - "dnsmasq"
            - "dosfstools"
            - "dracut-config-generic"
            - "dracut-network"
            - "e2fsprogs"
            - "firewalld"
            - "fuse-overlayfs"
            - "fwupd"
            - "glibc"
            - "glibc-minimal-langpack"
            - "gnupg2"
            - "greenboot"
            - "gzip"
            - "hostname"
            - "ima-evm-utils"
            - "iproute"
            - "iptables"
            - "iputils"
            - "keyutils"
            - "less"
            - "lvm2"
            - "NetworkManager"
            - "NetworkManager-wifi"
            - "NetworkManager-wwan"
            - "nss-altfiles"
            - "openssh-clients"
            - "openssh-server"
            - "passwd"
            - "pinentry"
            - "platform-python"
            - "podman"
            - "policycoreutils"
            - "policycoreutils-python-utils"
            - "polkit"
            - "procps-ng"
            - "redhat-release"
            - "rootfiles"
            - "rpm"
            - "rpm-ostree"
            - "rsync"
            - "selinux-policy-targeted"
            - "setools-console"
            - "setup"
            - "shadow-utils"
            - "shadow-utils"
            - "skopeo"
            - "slirp4netns"
            - "sudo"
            - "systemd"
            - "tar"
            - "tmux"
            - "traceroute"
            - "usbguard"
            - "util-linux"
            - "vim-minimal"
            - "wpa_supplicant"
            - "xz"
          exclude:
            - "rng-tools"
          conditions: &conditions_pkgsets_edge_commit
            "x86_64 specific packages for edge-commit":
              when:
                arch: "x86_64"
              append: &edge_commit_x86_64_pkgset
                include:
                  - "efibootmgr"
                  - "grub2"
                  - "grub2-efi-x64"
                  - "iwl1000-firmware"
                  - "iwl100-firmware"
                  - "iwl105-firmware"
                  - "iwl135-firmware"
                  - "iwl2000-firmware"
                  - "iwl2030-firmware"
                  - "iwl3160-firmware"
                  - "iwl5000-firmware"
                  - "iwl5150-firmware"
                  - "iwl6000-firmware"
                  - "iwl6050-firmware"
                  - "iwl7260-firmware"
                  - "microcode_ctl"
                  - "shim-x64"
            "aarch64 specific packages for edge-commit":
              when:
                arch: "aarch64"
              append: &edge_commit_aarch64_pkgset
                include:
                  - "grub2-efi-aa64"
                  - "efibootmgr"
                  - "shim-aa64"
                  - "iwl7260-firmware"
            "rhel-8.5 or below uses greenboot":
              when:
                version_less_than: "8.6"
              append:
                include:
                  - "greenboot-grub2"
                  - "greenboot-reboot"
                  - "greenboot-rpm-ostree-grub2"
                  - "greenboot-status"
            "rhel-8.6+ uses fdo":
              when:
                version_greater_or_equal: "8.6"
              append:
                include:
                  - "fdo-client"
                  - "fdo-owner-cli"
                  - "greenboot-default-health-checks"
                  - "sos"

  "edge-installer":
    image_config:
      iso_rootfs_type: "squashfs-ext4"
      conditions:
        "x86_64 uses syslinux":
          when:
            arch: "x86_64"
          shallow_merge:
            iso_boot_type: "syslinux"
    package_sets:
      installer:
        # TODO: non-arch-specific package set handling for installers
        # This image type requires build packages for installers and
        # ostree/edge.  For now we only have x86-64 installer build
        # package sets defined.  When we add installer build package sets
        # for other architectures, this will need to be moved to the
        # architecture and the merging will happen in the PackageSets()
        # method like the other sets.
        - *installer_pkgset
        - *anaconda_pkgset
        - *anaconda_boot_pkgset

  # XXX: only available for rhel-8.6+, this is not possible to limit right now
  "edge-raw-image":
    image_config:
      keyboard:
        keymap: "us"
      locale: "C.UTF-8"
      lock_root_user: true
      kernel_options: ["modprobe.blacklist=vc4"]
    partition_table:
      <<: *edge_base_partition_tables

  "edge-simplified-installer":
    partition_table:
      <<: *edge_base_partition_tables
    image_config:
      enabled_services: *enabled_services_edge
      keyboard:
        keymap: "us"
      locale: "C.UTF-8"
      lock_root_user: true
      kernel_options: ["modprobe.blacklist=vc4"]
    package_sets:
      # TODO: non-arch-specific package set handling for installers
      # This image type requires build packages for installers and
      # ostree/edge.  For now we only have x86-64 installer build
      # package sets defined.  When we add installer build package sets
      # for other architectures, this will need to be moved to the
      # architecture and the merging will happen in the PackageSets()
      # method like the other sets.
      installer:
        - *installer_pkgset
        - include:
            - "attr"
            - "basesystem"
            - "binutils"
            - "bsdtar"
            - "clevis-dracut"
            - "clevis-luks"
            - "cloud-utils-growpart"
            - "coreos-installer"
            - "coreos-installer-dracut"
            - "coreutils"
            - "device-mapper-multipath"
            - "dnsmasq"
            - "dosfstools"
            - "dracut-live"
            - "e2fsprogs"
            - "fcoe-utils"
            - "fdo-init"
            - "gzip"
            - "ima-evm-utils"
            - "iproute"
            - "iptables"
            - "iputils"
            - "iscsi-initiator-utils"
            - "keyutils"
            - "lldpad"
            - "lvm2"
            - "passwd"
            - "policycoreutils"
            - "policycoreutils-python-utils"
            - "procps-ng"
            - "redhat-logos"
            - "rootfiles"
            - "setools-console"
            - "sudo"
            - "traceroute"
            - "util-linux"
          conditions:
            # XXX: should we instead "<<: *conditions_edge_commit" here?
            # it will give different results
            "x86_64 specific pkgset for edge-simplified-installer":
              when:
                arch: "x86_64"
              append:
                <<: *edge_commit_x86_64_pkgset
            "aarch64 specific pkgset for edge-simplified-installer":
              when:
                arch: "aarch64"
              append:
                <<: *edge_commit_aarch64_pkgset

  "edge-container":
    image_config:
      <<: *edge_commit_image_config
    package_sets:
      os:
        - *edge_commit_pkgset

  vmdk: &vmdk
    image_config:
      kernel_options:
        - "ro"
        - "net.ifnames=0"
    partition_table:
      <<: *default_partition_tables
    package_sets: &vmdk_pkgsets
      os:
        - include:
            - "@core"
            - "chrony"
            - "cloud-init"
            - "firewalld"
            - "langpacks-en"
            - "open-vm-tools"
            - "selinux-policy-targeted"
          exclude:
            - "dracut-config-rescue"
            - "rng-tools"

  ova:
    <<: *vmdk

  gce: &gce
    # The configuration for non-RHUI images does not touch the RHSM configuration at all.
    # https://issues.redhat.com/browse/COMPOSER-2157
    image_config: &gce_image_config
      timezone: "UTC"
      time_synchronization:
        servers:
          - hostname: "metadata.google.internal"
      firewall:
        default_zone: "trusted"
      enabled_services:
        - "sshd"
        - "rngd"
        - "dnf-automatic.timer"
      disabled_services:
        - "sshd-keygen@"
        - "reboot.target"
      default_target: "multi-user.target"
      keyboard:
        keymap: "us"
      dnf_config:
        options:
          - config:
              main:
                ipresolve: "4"
      dnf_automatic_config:
        config:
          commands:
            apply_updates: true
            upgrade_type: "security"
      yum_repos:
        - filename: "google-cloud.repo"
          repos:
            - id: "google-compute-engine"
              name: "Google Compute Engine"
              # TODO: use el10 repo once it's available
              baseurl:
                - "https://packages.cloud.google.com/yum/repos/google-compute-engine-el8-x86_64-stable"
              enabled: true
              gpgcheck: true
              repo_gpgcheck: false
              gpgkey:
                - "https://packages.cloud.google.com/yum/doc/yum-key.gpg"
                - "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
      sshd_config:
        config:
          PasswordAuthentication: false
          ClientAliveInterval: 420
          PermitRootLogin: false
      update_default_kernel: true
      default_kernel: "kernel-core"
      # XXX: ensure the "old" behavior is preserved (that is
      # likely a bug) where for GCE the sysconfig network
      # options are not set because the merge of imageConfig
      # is shallow and the previous setup was changing the
      # kernel without also changing the network options.
      sysconfig: {}
      modprobe:
        - filename: "blacklist-floppy.conf"
          commands:
            - command: blacklist
              modulename: "floppy"
      gcp_guest_agent_config:
        config_scope: "distro"
        config:
          "InstanceSetup":
            set_boto_config: false
      kernel_options: ["net.ifnames=0", "biosdevname=0", "scsi_mod.use_blk_mq=Y", "crashkernel=auto", "console=ttyS0,38400n8d"]
      conditions:
        "rhel-8.4 needs special handling":
          # NOTE(akoutsou): these are enabled in the package preset, but for
          # some reason do not get enabled on 8.4.
          # the reason is unknown and deeply mysterious
          when:
            version_equal: "8.4"
          shallow_merge:
            enabled_services:
              - "sshd"
              - "rngd"
              - "dnf-automatic.timer"
              - "google-oslogin-cache.timer"
              - "google-guest-agent.service"
              - "google-shutdown-scripts.service"
              - "google-startup-scripts.service"
              - "google-osconfig-agent.service"
    partition_table:
      <<: *default_partition_tables
    package_sets:
      os:
        - *gce_common_pkgset

  "gce-rhui":
    <<: *gce
    image_config:
      <<: *gce_image_config
      rhsm_config:
        "no-subscription":
          subman:
            rhsmcertd:
              auto_registration: true
            rhsm:
              manage_repos: false
        "with-subscription":
          subman:
            rhsmcertd:
              auto_registration: true
              # do not disable the redhat.repo management if the user
              # explicitly request the system to be subscribed
    package_sets:
      os:
        - *gce_common_pkgset
        - include:
            - "google-rhui-client-rhel8"

  oci:
    <<: *qcow2

  openstack:
    <<: *qcow2
    image_config:
      kernel_options:
        - "ro"
        - "net.ifnames=0"
    platforms:
    package_sets:
      os:
        - include:
            - "@Core"
            - "langpacks-en"
            # From the lorax kickstart
            - "selinux-policy-targeted"
            - "cloud-init"
            - "qemu-guest-agent"
            - "spice-vdagent"
          exclude:
            - "dracut-config-rescue"
            - "rng-tools"

  wsl:
    image_config:
      no_selinux: true
      wsl:
        config:
          boot_systemd: true
    package_sets:
      os:
        - include:
            - "alternatives"
            - "audit-libs"
            - "basesystem"
            - "bash"
            - "brotli"
            - "ca-certificates"
            - "coreutils-single"
            - "crypto-policies-scripts"
            - "curl"
            - "libcurl"
            - "dnf"
            - "filesystem"
            - "findutils"
            - "gdb-gdbserver"
            # Differs from official UBI, as we don't include CRB repos
            # - "gdbm"
            - "glibc-minimal-langpack"
            - "gmp"
            - "gnupg2"
            - "gobject-introspection"
            - "hostname"
            - "langpacks-en"
            - "openssh-server"
            - "pam"
            - "passwd"
            - "procps-ng"
            - "python3"
            - "python3-inotify"
            - "python3-systemd"
            - "redhat-release"
            - "rootfiles"
            - "rpm"
            - "sed"
            - "setup"
            - "shadow-utils"
            - "subscription-manager"
            - "sudo"
            - "systemd"
            - "tar"
            - "tpm2-tss"
            - "tzdata"
            - "util-linux"
            - "vim-minimal"
            - "yum"
          exclude:
            - "aic94xx-firmware"
            - "alsa-firmware"
            - "alsa-lib"
            - "alsa-tools-firmware"
            - "biosdevname"
            - "cpio"
            - "diffutils"
            - "dnf-plugin-spacewalk"
            - "dracut"
            - "elfutils-debuginfod-client"
            - "fedora-release"
            - "fedora-repos"
            - "fontpackages-filesystem"
            - "gawk-all-langpacks"
            - "gettext"
            - "glibc-gconv-extra"
            - "glibc-langpack-en"
            - "gnupg2-smime"
            - "grub2-common"
            - "hardlink"
            - "iprutils"
            - "ivtv-firmware"
            - "kbd"
            - "kmod"
            - "kpartx"
            - "libcroco"
            - "libcrypt-compat"
            - "libevent"
            - "libkcapi"
            - "libkcapi-hmaccalc"
            - "libsecret"
            - "libselinux-utils"
            - "libxkbcommon"
            - "libertas-sd8787-firmware"
            - "memstrack"
            - "nss"
            - "openssl"
            - "openssl-pkcs11"
            - "os-prober"
            - "pigz"
            - "pinentry"
            - "plymouth"
            - "policycoreutils"
            - "python3-unbound"
            - "redhat-release-eula"
            - "rng-tools"
            - "rpm-plugin-selinux"
            - "rpm-plugin-systemd-inhibit"
            - "selinux-policy"
            - "selinux"
            - "selinux-policy-targeted"
            - "shared-mime-info"
            - "systemd-udev"
            - "trousers"
            - "udisks2"
            - "unbound-libs"
            - "xkeyboard-config"
            - "xz"

  "minimal-raw":
    image_config:
      enabled_services:
        - "NetworkManager.service"
        - "firewalld.service"
        - "sshd.service"
        - "initial-setup.service"
      files:
        # NOTE: temporary workaround for a bug in initial-setup that
        # requires a kickstart file in the root directory.
        - path: "/root/anaconda-ks.cfg"
          user: "root"
          group: "root"
          data: |
            # Run initial-setup on first boot
            # Created by osbuild
            firstboot --reconfig
            lang en_US.UTF-8
      kernel_options: ["ro"]
    partition_table:
      <<: *default_partition_tables
    package_sets:
      os:
        - include:
            - "@core"
            - "initial-setup"
            - "libxkbcommon"
            - "NetworkManager-wifi"
            - "iwl7260-firmware"
            - "iwl3160-firmware"
