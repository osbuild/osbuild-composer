pipeline {
    agent none

    environment {
        OPENSTACK_CONTAINER = "osbuildci-artifacts"
        OPENSTACK_CREDS = credentials('openstack-psi-imagebuilder')
    }

    options {
        ansiColor('xterm')
        timestamps()
    }

    stages {
        stage("Functional Testing") {
            parallel {
                stage('Fedora 31 base') {
                    agent { label "fedora31" }
                    environment { TEST_TYPE = "base" }
                    steps {
                        run_tests()
                    }
                    post {
                        always {
                            preserve_artifacts()
                        }
                    }
                }
                stage('Fedora 31 image') {
                    agent { label "fedora31" }
                    environment { TEST_TYPE = "image" }
                    steps {
                        run_tests()
                    }
                    post {
                        always {
                            preserve_artifacts()
                        }
                    }
                }
                stage('Fedora 32 base') {
                    agent { label "fedora32" }
                    environment { TEST_TYPE = "base" }
                    steps {
                        run_tests()
                    }
                    post {
                        always {
                            preserve_artifacts()
                        }
                    }
                }
                stage('Fedora 32 image') {
                    agent { label "fedora32" }
                    environment { TEST_TYPE = "image" }
                    steps {
                        run_tests()
                    }
                    post {
                        always {
                            preserve_artifacts()
                        }
                    }
                }
                stage('RHEL 8.2 base') {
                    agent { label "rhel82" }
                    environment { TEST_TYPE = "base" }
                    steps {
                        run_tests()
                    }
                    post {
                        always {
                            preserve_artifacts()
                        }
                    }
                }
                stage('RHEL 8.2 image') {
                    agent { label "rhel82" }
                    environment { TEST_TYPE = "image" }
                    steps {
                        run_tests()
                    }
                    post {
                        always {
                            preserve_artifacts()
                        }
                    }
                }
            }
        }
    }
}

// Set up a function to hold the steps needed to run the tests so we don't
// need to copy/paste the same lines over and over above.
void run_tests() {

    sh "printenv | sed 's;=.*;;' | sort"

    // Run the tests from the repository.
    sh "schutzbot/run_tests.sh"

}

// Keep artifacts from the job for further review.
void preserve_artifacts() {

    // Run a script to preserve artifacts in OpenStack Swift.
    sh "schutzbot/preserve_artifacts.sh"

}
