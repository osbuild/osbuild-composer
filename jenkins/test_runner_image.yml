---

- name: Setup test case prefix based on distro and release
  set_fact:
    test_case_prefix: >-
      {%- if ansible_distribution == "Fedora" -%}
      fedora_{{ ansible_distribution_version }}-{{ ansible_machine }}
      {%- else -%}
      rhel_{{ ansible_distribution_version }}-{{ ansible_machine }}
      {%- endif -%}

- name: Show which tests will be run
  debug:
    msg: |
      Running the following image test cases:
      {% for test_case in test_cases %}
        - {{ test_case | splitext | first }}
      {% endfor %}

- block:

    # NOTE(mhayden): The fancy jinja2 here ensures that the last test case
    # in the list does not have a backslash added. That would make the shell
    # upset and nobody likes it when that happens.
    - name: "Run {{ test_type }} tests"
      command: |
        {{ image_test_executable }} -test.v \
          {% for test_case in test_cases %}
            {% if loop.last %}
          {{ image_test_case_path }}/{{ test_case_prefix }}-{{ test_case }}
            {% else %}
          {{ image_test_case_path }}/{{ test_case_prefix }}-{{ test_case }} \
            {% endif %}
          {% endfor %}
      environment: "{{ env_vars }}"
      args:
        chdir: "{{ tests_working_directory }}"
      register: async_test
      async: "{{ timeout * 60 }}"
      poll: "{{ polling_interval }}"

    - name: "Mark {{ test_type }} tests as passed"
      set_fact:
        passed_tests: "{{ passed_tests + [test_type] }}"

  rescue:

    - name: "Mark {{ test_type }} tests as failed"
      set_fact:
        failed_tests: "{{ failed_tests + [test_type] }}"

  always:

    - name: "Write log for {{ test_type }} tests"
      copy:
        dest: "{{ workspace }}/image_test.log"
        content: |
          Logs from {{ test_type }} test
          ----------------------------------------------------------------------
          stderr:
          {{ async_test.stderr }}
          ----------------------------------------------------------------------
          stdout:
          {{ async_test.stdout }}

