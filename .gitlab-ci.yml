stages:
  - init
  - rpmbuild
  - prepare-rhel-internal
  - test
  - cleanup
  - finish

.base:
  before_script:
    - schutzbot/ci_details.sh > ci-details-before-run
    - cat schutzbot/team_ssh_keys.txt | tee -a ~/.ssh/authorized_keys > /dev/null
  after_script:
    - schutzbot/ci_details.sh > ci-details-after-run || true
    - schutzbot/update_github_status.sh update || true
    - schutzbot/save_journal.sh || true
    - schutzbot/run_cloud_cleaner.sh || true
  interruptible: true
  tags:
    - terraform
  artifacts:
    paths:
      - journal-log.gpg
      - ci-artifacts
      - ci-details-before-run
      - ci-details-after-run
      - "*.repo"
      - COMPOSER_NVR
    when: always

.terraform:
  extends: .base
  tags:
    - terraform

.terraform/openstack:
  extends: .base
  tags:
    - terraform/openstack


init:
  stage: init
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start

.build_rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $SKIP_CI == "false"'
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $SKIP_CI == "true"'
      when: manual

.upstream_rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

.nightly_rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-9.0-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "9"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-8.6-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "8"'


RPM:
  stage: rpmbuild
  extends: .terraform
  rules:
    - !reference [.build_rules, rules]
  script:
    - sh "schutzbot/mockbuild.sh"
  parallel:
    matrix:
      - RUNNER:
          - aws/rhel-8.5-ga-x86_64

.regression:
  stage: test
  extends: .terraform
  rules:
    - !reference [.upstream_rules, rules]
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/${SCRIPT}
  parallel:
    matrix:
      - RUNNER:
          - aws/rhel-8.5-ga-x86_64
        INTERNAL_NETWORK: ["true"]

regression-old-worker-new-composer:
  parallel:
    matrix:
      - RUNNER:
          - aws/rhel-8.5-ga-x86_64
        INTERNAL_NETWORK: ["true"]
  extends: .regression
  variables:
    SCRIPT: regression-old-worker-new-composer.sh

Image Tests:
  stage: test
  extends: .terraform
  rules:
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/image_tests.sh
  parallel:
    matrix:
      - RUNNER:
          - aws/rhel-8.6-nightly-x86_64
          - aws/rhel-8.6-nightly-aarch64
          # See https://github.com/osbuild/osbuild-composer/issues/1819 and related issues
          - aws/rhel-9.0-nightly-x86_64
          - aws/rhel-9.0-nightly-aarch64
        INTERNAL_NETWORK: ["true"]

NIGHTLY_FAIL:
  stage: finish
  tags:
    - shell
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $NIGHTLY == "true"'
      when: on_failure
  script:
    - schutzbot/slack_notification.sh FAILED ":big-sad:"

NIGHTLY_SUCCESS:
  stage: finish
  tags:
    - shell
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $NIGHTLY == "true"'
  script:
    - schutzbot/slack_notification.sh SUCCESS ":partymeow:"

SCHEDULED_CLOUD_CLEANER:
  stage: cleanup
  tags:
    - terraform
  variables:
    RUNNER: aws/centos-stream-8-x86_64
    INTERNAL_NETWORK: "true"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CLEANUP == "true"'
  script:
    - schutzbot/deploy.sh
    - schutzbot/scheduled_cloud_cleaner.sh

finish:
  stage: finish
  dependencies: []
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish
