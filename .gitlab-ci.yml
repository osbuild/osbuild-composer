stages:
  - init
  - rpmbuild
  - prepare-rhel-internal
  - test
  - cleanup
  - finish

.base:
  after_script:
    - schutzbot/update_github_status.sh update
    - schutzbot/save_journal.sh
    - schutzbot/run_cloud_cleaner.sh
  interruptible: true
  tags:
    - terraform
  artifacts:
    paths:
      - journal-log.gpg
      - ci-artifacts
      - "*.repo"
      - COMPOSER_NVR
    when: always

.terraform:
  extends: .base
  tags:
    - terraform

.terraform/openstack:
  extends: .base
  tags:
    - terraform/openstack


init:
  stage: init
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start


.RPM_RUNNERS_RHEL: &RPM_RUNNERS_RHEL
  RUNNER:
    - aws/centos-stream-9-x86_64
  INTERNAL_NETWORK: ["true"]

RPM:
  stage: rpmbuild
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  script:
    - sh "schutzbot/mockbuild.sh"
  after_script:
    - schutzbot/update_github_status.sh update
    - schutzbot/save_journal.sh
  parallel:
    matrix:
      - <<: *RPM_RUNNERS_RHEL

.INTEGRATION_TESTS: &INTEGRATION_TESTS
  SCRIPT:
    - koji.sh

Integration:
  stage: test
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-9.0-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "9"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-8.6-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "8"'
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/${SCRIPT}
  parallel:
    matrix:
      - <<: *INTEGRATION_TESTS
        RUNNER:
          - aws/centos-stream-9-x86_64
        INTERNAL_NETWORK: ["true"]

NIGHTLY_FAIL:
  stage: finish
  tags:
    - shell
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $NIGHTLY == "true"'
      when: on_failure
  script:
    - schutzbot/slack_notification.sh FAILED ":big-sad:"

NIGHTLY_SUCCESS:
  stage: finish
  tags:
    - shell
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $NIGHTLY == "true"'
  script:
    - schutzbot/slack_notification.sh SUCCESS ":partymeow:"

Installer:
  stage: test
  extends: .terraform/openstack
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-9\.[0-9]-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "9"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-8\.[0-9]-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "8"'
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/installers.sh
  parallel:
    matrix:
      - RUNNER:
          - rhos-01/rhel-8.6-nightly-x86_64
          - rhos-01/rhel-9.0-nightly-x86_64
          - rhos-01/centos-stream-9-x86_64

SCHEDULED_CLOUD_CLEANER:
  stage: cleanup
  tags:
    - terraform
  variables:
    RUNNER: aws/centos-stream-8-x86_64
    INTERNAL_NETWORK: "true"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CLEANUP == "true"'
  script:
    - schutzbot/deploy.sh
    - schutzbot/scheduled_cloud_cleaner.sh

SonarQube:
  stage: test
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  script:
    - schutzbot/sonarqube.sh
  variables:
    RUNNER: aws/centos-stream-8-x86_64
    INTERNAL_NETWORK: "true"
    GIT_DEPTH: 0

finish:
  stage: finish
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish
