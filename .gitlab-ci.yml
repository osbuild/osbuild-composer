stages:
  - init
  - rpmbuild
  - prepare-rhel-internal
  - test
  - cleanup
  - finish

.base:
  before_script:
    - mkdir -p /tmp/artifacts
    - schutzbot/ci_details.sh > /tmp/artifacts/ci-details-before-run.txt
    - cat schutzbot/team_ssh_keys.txt | tee -a ~/.ssh/authorized_keys > /dev/null
  after_script:
    - schutzbot/ci_details.sh > /tmp/artifacts/ci-details-after-run.txt || true
    - schutzbot/update_github_status.sh update || true
    - schutzbot/save_journal.sh || true
    - schutzbot/upload_artifacts.sh
  interruptible: true
  retry: 1
  tags:
    - terraform
  artifacts:
    paths:
      - "*.repo"
      - COMPOSER_NVR
    when: always

.terraform:
  extends: .base
  tags:
    - terraform

.terraform/openstack:
  extends: .base
  tags:
    - terraform/openstack


init:
  stage: init
  interruptible: true
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start

.build_rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $SKIP_CI == "false"'
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $SKIP_CI == "true"'
      when: manual

.upstream_rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

.nightly_rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-9.1-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "9"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $RUNNER =~ /[\S]+rhel-8.7-[^ga][\S]+/ && $NIGHTLY == "true" && $RHEL_MAJOR == "8"'


.RPM_RUNNERS_RHEL: &RPM_RUNNERS_RHEL
  RUNNER:
    - aws/rhel-8.7-nightly-x86_64
    - aws/rhel-8.7-nightly-aarch64
    - aws/rhel-9.1-nightly-x86_64
    - aws/rhel-9.1-nightly-aarch64

  INTERNAL_NETWORK: ["true"]

RPM:
  stage: rpmbuild
  extends: .terraform
  rules:
    - !reference [.build_rules, rules]
  script:
    - sh "schutzbot/mockbuild.sh"
  parallel:
    matrix:
      - RUNNER:
          - aws/fedora-37-x86_64
          - aws/fedora-37-aarch64
          - aws/centos-stream-9-x86_64

Build -tests RPM for RHEL:
  stage: rpmbuild
  extends: .terraform
  rules:
    - !reference [.nightly_rules, rules]
  script:
    - sh "schutzbot/mockbuild.sh"
  interruptible: true
  after_script:
    - schutzbot/update_github_status.sh update
    - schutzbot/save_journal.sh
  parallel:
    matrix:
      - <<: *RPM_RUNNERS_RHEL

Prepare-rhel-internal:
  stage: prepare-rhel-internal
  extends: .terraform
  rules:
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/prepare-rhel-internal.sh
  artifacts:
    paths:
      - rhel-${RHEL_MAJOR}.json
      - rhel${RHEL_MAJOR}internal.repo
      - COMPOSE_ID
  parallel:
    matrix:
      - RUNNER:
          # NOTE: 1 runner prepares for all arches b/c subsequent jobs download
          # artifacts from all previous jobs and the last one wins
          - aws/rhel-8.7-nightly-x86_64
          - aws/rhel-9.1-nightly-x86_64
        INTERNAL_NETWORK: ["true"]

Base:
  stage: test
  extends: .terraform
  rules:
    - !reference [.upstream_rules, rules]
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/base_tests.sh
  parallel:
    matrix:
      - RUNNER:
          - aws/fedora-37-x86_64
          - aws/fedora-37-aarch64

Manifests:
  stage: test
  extends: .terraform
  rules:
    - !reference [.upstream_rules, rules]
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/manifest_tests.sh
  parallel:
    matrix:
      - RUNNER:
          - aws/centos-stream-9-x86_64
        INTERNAL_NETWORK: ["true"]

.regression:
  stage: test
  extends: .terraform
  rules:
    - !reference [.upstream_rules, rules]
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/${SCRIPT}
  parallel:
    matrix:
      - RUNNER:
          - aws/fedora-37-x86_64
          - aws/fedora-37-aarch64

regression-bigiso:
  extends: .regression
  variables:
    SCRIPT: regression-bigiso.sh

regression-composer-works-behind-satellite-fallback:
  extends: .regression
  variables:
    SCRIPT: regression-composer-works-behind-satellite-fallback.sh

regression-composer-works-behind-satellite:
  extends: .regression
  variables:
    SCRIPT: regression-composer-works-behind-satellite.sh

regression-excluded-dependency:
  extends: .regression
  variables:
    SCRIPT: regression-excluded-dependency.sh

regression-include-excluded-packages:
  extends: .regression
  variables:
    SCRIPT: regression-include-excluded-packages.sh


regression-no-explicit-rootfs-definition:
  extends: .regression
  variables:
    SCRIPT: regression-no-explicit-rootfs-definition.sh

Image Tests:
  stage: test
  extends: .terraform
  rules:
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/image_tests.sh
  parallel:
    matrix:
      - RUNNER:
          - aws/rhel-8.4-ga-x86_64
          - aws/rhel-8.4-ga-aarch64
          - aws/rhel-8.7-nightly-x86_64
          - aws/rhel-8.7-nightly-aarch64
          - aws/rhel-9.1-nightly-x86_64
          - aws/rhel-9.1-nightly-aarch64
        INTERNAL_NETWORK: ["true"]

.integration_base:
  stage: test
  extends: .terraform
  rules:
    - !reference [.upstream_rules, rules]
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/${SCRIPT}

.rhel_runners: &rhel_runners
    RUNNER:
      - aws/centos-stream-8-x86_64
      - aws/rhel-8.4-ga-x86_64
      - aws/rhel-8.6-ga-x86_64
      - aws/rhel-9.0-ga-x86_64
      - aws/rhel-8.7-nightly-x86_64
      - aws/rhel-9.1-nightly-x86_64
      - aws/centos-stream-9-x86_64
    INTERNAL_NETWORK: ["true"]

.integration_rhel:
  extends: .integration_base
  parallel:
    matrix:
      - *rhel_runners

.fedora_runners: &fedora_runners
    RUNNER:
      - aws/fedora-37-x86_64

.integration_fedora:
  extends: .integration_base
  parallel:
    matrix:
      - *fedora_runners

.integration:
  extends: .integration_base
  parallel:
    matrix:
      - *fedora_runners

koji.sh (cloudapi):
  extends: .integration
  variables:
    SCRIPT: koji.sh

aws.sh:
  extends: .integration
  variables:
    SCRIPT: aws.sh
    
azure.sh:
  extends: .integration
  variables:
    SCRIPT: azure.sh

# The required GCE image type is not supported on Fedora
gcp.sh:
  extends: .integration_rhel
  variables:
    SCRIPT: gcp.sh

vmware.sh:
  extends: .integration
  variables:
    SCRIPT: vmware.sh

filesystem.sh:
  extends: .integration
  variables:
    SCRIPT: filesystem.sh

cross-distro.sh:
  extends: .integration
  variables:
    SCRIPT: cross-distro.sh

.API_TESTS: &API_TESTS
  IMAGE_TYPE:
    - aws
    - azure
    - edge-commit
    - gcp
    - vsphere
    - edge-commit generic.s3
    - edge-container

API:
  stage: test
  extends: .terraform
  rules:
    - !reference [.upstream_rules, rules]
    # note: cloud API is not supported for on-prem installations so
    # don't run this test case for nightly trees
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/api.sh ${IMAGE_TYPE}
  parallel:
    matrix:
      - IMAGE_TYPE: ["edge-commit"]
        RUNNER:
          - aws/fedora-37-x86_64

.libvirt_integration:
  stage: test
  extends: .terraform/openstack
  rules:
    - !reference [.upstream_rules, rules]
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/${SCRIPT}
  parallel:
    matrix:
      - RUNNER:
          - rhos-01/centos-stream-8-x86_64
          - rhos-01/rhel-8.6-ga-x86_64
          - rhos-01/rhel-9.0-ga-x86_64
          - rhos-01/rhel-8.7-nightly-x86_64
          - rhos-01/rhel-9.1-nightly-x86_64
          - rhos-01/centos-stream-9-x86_64

Upgrade:
  stage: test
  extends: .terraform/openstack
  rules:
    - !reference [.nightly_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/upgrade8to9.sh
  variables:
    RUNNER: rhos-01/rhel-9.1-nightly-x86_64

NIGHTLY_FAIL:
  stage: finish
  tags:
    - shell
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $NIGHTLY == "true"'
      when: on_failure
  script:
    - schutzbot/slack_notification.sh FAILED ":big-sad:"

NIGHTLY_SUCCESS:
  stage: finish
  tags:
    - shell
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $NIGHTLY == "true"'
  script:
    - schutzbot/slack_notification.sh SUCCESS ":partymeow:"

Manifest-diff:
  stage: test
  extends: .terraform
  rules:
    # don't run on main
    - if: '$CI_COMMIT_BRANCH != "main"'
  script:
    - ./test/cases/diff-manifests.sh
  variables:
    RUNNER: aws/rhel-9.0-ga-x86_64
    INTERNAL_NETWORK: "true"
    GIT_STRATEGY: "clone"
    GIT_CHECKOUT: "true"
    GIT_DEPTH: 500
  artifacts:
    paths:
      - manifests.diff

SCHEDULED_CLOUD_CLEANER:
  stage: cleanup
  tags:
    - terraform
  variables:
    RUNNER: aws/centos-stream-8-x86_64
    INTERNAL_NETWORK: "true"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CLEANUP == "true"'
  script:
    - schutzbot/deploy.sh
    - schutzbot/scheduled_cloud_cleaner.sh

SonarQube:
  stage: test
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == "main"'
  script:
    - schutzbot/sonarqube.sh
  variables:
    RUNNER: aws/centos-stream-8-x86_64
    INTERNAL_NETWORK: "true"
    GIT_DEPTH: 0

ContainerUpload:
  stage: test
  extends: .terraform
  rules:
    - !reference [.upstream_rules, rules]
  script:
    - schutzbot/deploy.sh
    - /usr/libexec/tests/osbuild-composer/container-upload.sh
  variables:
    RUNNER: aws/fedora-37-x86_64
    INTERNAL_NETWORK: "false"

finish:
  stage: finish
  dependencies: []
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish
